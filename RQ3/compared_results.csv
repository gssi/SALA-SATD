,formatted_readme,summary,prompt_text,generated_summary
0,//TODO: get SQL rendering out of this package!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: get SQL rendering out of this package!

### Response:",DESIGN.
1,"// TODO // This assumes we only get a SET notification, which isn't a good assumption. //",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO // This assumes we only get a SET notification, which isn't a good assumption. //

### Response:",DEFECT.
2,// TODO: Should be anything allowed by current diagram,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Should be anything allowed by current diagram

### Response:",DESIGN.
3,// TODO: How does the pressed cancel become a java.lang.Exception?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: How does the pressed cancel become a java.lang.Exception?

### Response:",DEFECT.
4,"/* * * A Dom tree panel for to display response as tree view author <a * href=""mailto:d.maung Maung</a> * TODO implement to find any nodes in the tree using TreePath. * */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * * A Dom tree panel for to display response as tree view author <a * href=""mailto:d.maung Maung</a> * TODO implement to find any nodes in the tree using TreePath. * */

### Response:",IMPLEMENTATION.
5,"/** * TODO: This name of the expression language should be * configurable by the user. <p> * * According to the UML standard, * the expression language should be the same * for all elements in one diagram. <p> * * UML is not a sensible default - usually this is some pseudo-language. * * the name of the expression language */",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: This name of the expression language should be * configurable by the user. <p> * * According to the UML standard, * the expression language should be the same * for all elements in one diagram. <p> * * UML is not a sensible default - usually this is some pseudo-language. * * the name of the expression language */

### Response:",DESIGN.
6,"/* * The following variables are set by StandardJMeterEngine. * This is done before start() is called, so the values will be published to the thread safely * TODO - consider passing them to the constructor, so that they can be made final * (to avoid adding lots of parameters, perhaps have a parameter wrapper object. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * The following variables are set by StandardJMeterEngine. * This is done before start() is called, so the values will be published to the thread safely * TODO - consider passing them to the constructor, so that they can be made final * (to avoid adding lots of parameters, perhaps have a parameter wrapper object. */

### Response:",DESIGN.
7,// TODO turn into method?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO turn into method?

### Response:",DESIGN.
8,/* * END-KLUDGE */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * END-KLUDGE */

### Response:",DESIGN.
9,//TODO: code duplication with SingleTableEntityPersister,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: code duplication with SingleTableEntityPersister

### Response:",DESIGN. Duplicate code.
10,// TODO: We really want this class to have package scope however the reflection,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We really want this class to have package scope however the reflection

### Response:",DESIGN.
11,/** * **FIXME** This function needs documentation * * Constructor * * String * Name * */,DOCUMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * **FIXME** This function needs documentation * * Constructor * * String * Name * */

### Response:",DOCUMENTATION.
12,"// Perhaps if Xerces wasn't slightly brain-damaged, we would // not need this",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Perhaps if Xerces wasn't slightly brain-damaged, we would // not need this

### Response:",DESIGN.
13,// TODO: Move to GEF,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Move to GEF

### Response:",DESIGN.
14,"/* * TODO: This is probably not the right location * for switching off the ""filterNewlines"". * The setting gets lost after selecting a different * ModelElement in the diagram. * BTW, see how it is used in * javax.swing.text.PlainDocument. * See issue 1812. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * TODO: This is probably not the right location * for switching off the ""filterNewlines"". * The setting gets lost after selecting a different * ModelElement in the diagram. * BTW, see how it is used in * javax.swing.text.PlainDocument. * See issue 1812. */

### Response:",DEFECT.
15,// TODO verify this is correct,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO verify this is correct

### Response:",DESIGN.
16,"/** * Process streams get Channel.newChannel()ed into FileChannel but are not actually * seekable. So instead of just the isSeekable check doing instanceof FileChannel, * we must also add this boolean to check, which we set to false when it's known * that the incoming channel is from a process. * * FIXME: This is gross, and it's NIO's fault for not providing a nice way to * tell if a channel is ""really"" seekable. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Process streams get Channel.newChannel()ed into FileChannel but are not actually * seekable. So instead of just the isSeekable check doing instanceof FileChannel, * we must also add this boolean to check, which we set to false when it's known * that the incoming channel is from a process. * * FIXME: This is gross, and it's NIO's fault for not providing a nice way to * tell if a channel is ""really"" seekable. */

### Response:",DESIGN.
17,//TODO: shift block down to bottom,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: shift block down to bottom

### Response:",DESIGN.
18,// TODO: Should we handle <<access>> and <<import>> here?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Should we handle <<access>> and <<import>> here?

### Response:","DESIGN. Yes, we should."
19,//TODO: make this a bit nicer,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: make this a bit nicer

### Response:",DESIGN.
20,// TODO: This is a tagged value name which will never trigger an event,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This is a tagged value name which will never trigger an event

### Response:",DESIGN.
21,// installColorsAndFont needs to be run twice. Background and foreground // colors only work if run after the super call but font only works if run // before the super call. May be a bug in JDK 1.4,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// installColorsAndFont needs to be run twice. Background and foreground // colors only work if run after the super call but font only works if run // before the super call. May be a bug in JDK 1.4

### Response:",DEFECT.
22,"// these are used to eliminate code duplication. i don't normally use // the visitor or ""template method"" pattern, but this code was contributed // by Peter Cox and i don't feel like changing it around too much.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// these are used to eliminate code duplication. i don't normally use // the visitor or ""template method"" pattern, but this code was contributed // by Peter Cox and i don't feel like changing it around too much.

### Response:",DESIGN.
23,// something is very wrong here,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// something is very wrong here

### Response:",DESIGN.
24,// All form parameter always have text/plain as mime type //TODO make this a parameter?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// All form parameter always have text/plain as mime type //TODO make this a parameter?

### Response:",DESIGN.
25,/** * Builds a default implementation for an interface. The interface * is not owned by any model element by default. Users should not * forget to add ownership. * * Interface * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Builds a default implementation for an interface. The interface * is not owned by any model element by default. Users should not * forget to add ownership. * * Interface * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */

### Response:",DESIGN. Improve this method to do this automatically.
26,// ************* copied from ConcatTest *************,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// ************* copied from ConcatTest *************

### Response:",DESIGN.
27,// TODO: newTypeError does not offer enough for ruby error string...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: newTypeError does not offer enough for ruby error string...

### Response:",IMPLEMENTATION.
28,"/** * TODO: MVW: I am not completely sure of the following:<p> * The ""namespace"" of the diagram is e.g. used when creating new elements * that are shown on the diagram; they will have their namespace set * according this. It is NOT necessarily equal to the ""owner"". * * the namespace for the diagram */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: MVW: I am not completely sure of the following:<p> * The ""namespace"" of the diagram is e.g. used when creating new elements * that are shown on the diagram; they will have their namespace set * according this. It is NOT necessarily equal to the ""owner"". * * the namespace for the diagram */

### Response:",DESIGN.
29,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...

### Response:",DESIGN.
30,"// A Classifier can only have a single unnamed ClassifierRole, so // TODO: This probably belongs in a critic instead of here",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// A Classifier can only have a single unnamed ClassifierRole, so // TODO: This probably belongs in a critic instead of here

### Response:",DESIGN.
31,//FIXME: get the PersistentClass,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//FIXME: get the PersistentClass

### Response:",DESIGN.
32,"//??? For now, use the same renderer as everyone else. //?? //?? IN FUTURE: change this to use a new instance of renederer //?? for this data type.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//??? For now, use the same renderer as everyone else. //?? //?? IN FUTURE: change this to use a new instance of renederer //?? for this data type.

### Response:",DESIGN.
33,"//TODO: Decide whether this should be a bound property or not. // getPropertyChangeReporter().firePropertyChange(ISQLDriver.IPropertyNames.NAME, _name, _name);",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: Decide whether this should be a bound property or not. // getPropertyChangeReporter().firePropertyChange(ISQLDriver.IPropertyNames.NAME, _name, _name);

### Response:",DESIGN.
34,"/** * Returns all states that can be recursively contained by the given State. * <p> * TODO: {  getAllPossibleSubvertices(Object)} and * {  getAllSubStates(Object)} are duplicates as implemented for MDR. * It isn't clear from the Javadoc or usage whether they should do different * things or this just happened because no one noticed we already had * another method. * * oState * the Composite state we are searching the states for, * Collection the collection with found states */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Returns all states that can be recursively contained by the given State. * <p> * TODO: {  getAllPossibleSubvertices(Object)} and * {  getAllSubStates(Object)} are duplicates as implemented for MDR. * It isn't clear from the Javadoc or usage whether they should do different * things or this just happened because no one noticed we already had * another method. * * oState * the Composite state we are searching the states for, * Collection the collection with found states */

### Response:",DESIGN. Duplicate method.
35,// FIXME: This isn't right for within ensured/rescued code,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: This isn't right for within ensured/rescued code

### Response:",DESIGN.
36,// hack to get fixed length 'length' field,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// hack to get fixed length 'length' field

### Response:",DESIGN.
37,// TODO: What do we want to use as an equivalent here?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: What do we want to use as an equivalent here?

### Response:",DESIGN. I'd like to use the same equivalent as the other direction.
38,// ?R | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest,TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// ?R | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest

### Response:",TEST.
39,"// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is. see note at  getProxyOrPackageUnderPackage // re: future approach below the top-level.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is. see note at  getProxyOrPackageUnderPackage // re: future approach below the top-level.

### Response:",DESIGN.
40,// Bug  1757076 // always use false unless user specifies otherwise; this breaks // date editing in Derby (possibly DB2 as well),DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Bug  1757076 // always use false unless user specifies otherwise; this breaks // date editing in Derby (possibly DB2 as well)

### Response:",DEFECT.
41,// XXX: we should use JCVS (www.ice.com/JCVS) instead of // command line execution so that we don't rely on having // native CVS stuff around (SM),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// XXX: we should use JCVS (www.ice.com/JCVS) instead of // command line execution so that we don't rely on having // native CVS stuff around (SM)

### Response:",DESIGN.
42,// FIXME: this should go somewhere more generic -- maybe IdUtil,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: this should go somewhere more generic -- maybe IdUtil

### Response:",DESIGN.
43,// TODO: This is probably BAD...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This is probably BAD...

### Response:",DESIGN. Bad?
44,// TODO Binary incompatibility; an old override must override putAll.,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO Binary incompatibility; an old override must override putAll.

### Response:",DESIGN.
45,"/** * A BufferInputStream that is aware of XML structure. * It searches for the first occurrence of a named tag * and reads only the data (inclusively) from that tag * to the matching end tag or it can search for the first * occurrence of a named tag and read on the child tags. * The tag is not expected to be an empty tag. * <p> * TODO: This is hardwired to assume a fixed single byte * character encoding. It needs to be updated to handle different * encodings, including multi-byte encodings. - tfm 20070607 * * Bob Tarling */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * A BufferInputStream that is aware of XML structure. * It searches for the first occurrence of a named tag * and reads only the data (inclusively) from that tag * to the matching end tag or it can search for the first * occurrence of a named tag and read on the child tags. * The tag is not expected to be an empty tag. * <p> * TODO: This is hardwired to assume a fixed single byte * character encoding. It needs to be updated to handle different * encodings, including multi-byte encodings. - tfm 20070607 * * Bob Tarling */

### Response:",IMPLEMENTATION.
46,//use of a stringbuffer to workaround a JDK bug,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//use of a stringbuffer to workaround a JDK bug

### Response:",DESIGN.
47,// TODO: make it cross runtime safe by COW or eager copy,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: make it cross runtime safe by COW or eager copy

### Response:",DESIGN.
48,/* TODO: THIS IS A HACK. * A much better way of doing this would be not to start * the critic in the first place. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: THIS IS A HACK. * A much better way of doing this would be not to start * the critic in the first place. */

### Response:",DESIGN. Hack to stop the critic being started.
49,"//TODO: would be nice to use false, but issues with MS SQL",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: would be nice to use false, but issues with MS SQL

### Response:",DEFECT.
50,// get the right object from the list ... would it be easier to just call getEntity() ??,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// get the right object from the list ... would it be easier to just call getEntity() ??

### Response:","DESIGN. Yes, it would be easier."
51,"/** * Class to display graphics for a UML SynchState in a diagram. <p> * * TODO: If the font increases, the circle should grow, too. * * pepargouml */",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Class to display graphics for a UML SynchState in a diagram. <p> * * TODO: If the font increases, the circle should grow, too. * * pepargouml */

### Response:",IMPLEMENTATION.
52,//TODO add tests for SaveGraphics,TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO add tests for SaveGraphics

### Response:",TEST.
53,// Changed in UML 2.1 - Component with <<subsystem>> stereotype // TODO: We should deprecate this?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Changed in UML 2.1 - Component with <<subsystem>> stereotype // TODO: We should deprecate this?

### Response:",DESIGN.
54,// TODO: I18N required,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: I18N required

### Response:",IMPLEMENTATION.
55,// TODO could these be done earlier (or just once?),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO could these be done earlier (or just once?)

### Response:",DESIGN.
56,// TODO: need to get this back into the method signature...now is too late...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: need to get this back into the method signature...now is too late...

### Response:",DESIGN.
57,// TODO: don't calculate the same value 3 times,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't calculate the same value 3 times

### Response:",IMPLEMENTATION.
58,// This is perhaps innefficient timewise? Optimal spacewise,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// This is perhaps innefficient timewise? Optimal spacewise

### Response:",DESIGN.
59,// TODO: We shouldn't need this reflection any more once we have // convinced ourselves that everything with a getItemUID method // is implementing IItemUID,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We shouldn't need this reflection any more once we have // convinced ourselves that everything with a getItemUID method // is implementing IItemUID

### Response:",DESIGN.
60,// TODO: Considering all delete events to be valid like below // is going to cause lots of unecessary work and some problems,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Considering all delete events to be valid like below // is going to cause lots of unecessary work and some problems

### Response:",DEFECT.
61,// stupidity,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// stupidity

### Response:",DESIGN.
62,// TODO - not sure this is the best method,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO - not sure this is the best method

### Response:",DESIGN.
63,// TODO: Something might go wrong during processing. We don't really // want to create the model element until the user releases the mouse // in the place expected.,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Something might go wrong during processing. We don't really // want to create the model element until the user releases the mouse // in the place expected.

### Response:",DEFECT.
64,// TODO Revert to SVN revision 2469 in JFreeChart 1.0.16 // (MultipleGradientPaint's / JDK issues) // TODO THEN: change visibility of ALL darker(...) Methods EXCEPT // darker(Paint) to private!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO Revert to SVN revision 2469 in JFreeChart 1.0.16 // (MultipleGradientPaint's / JDK issues) // TODO THEN: change visibility of ALL darker(...) Methods EXCEPT // darker(Paint) to private!

### Response:",DESIGN.
65,// TODO: Fix this so it will work for non-POJO entity mode,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Fix this so it will work for non-POJO entity mode

### Response:",DESIGN.
66,// TODO: Make another pass to deal with overlaps?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Make another pass to deal with overlaps?

### Response:",DESIGN. Overlaps are not dealt with at present.
67,"// This feels sloppy, especially for non-U.S. locales.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// This feels sloppy, especially for non-U.S. locales.

### Response:",DESIGN.
68,"// TODO: It would be really, really nice to use this to also model components!",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: It would be really, really nice to use this to also model components!

### Response:",DESIGN.
69,"// TODO: ActionState, CallState, and SubactivityState have been replaced // in UML 2.0 by explicitly modeled Actions",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: ActionState, CallState, and SubactivityState have been replaced // in UML 2.0 by explicitly modeled Actions

### Response:",DESIGN. IMPLEMENTATION. DEFECT.
70,// TODO hubms: copied from frederiks search builder,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO hubms: copied from frederiks search builder

### Response:",DESIGN. I think it would be better to have a SearchResult interface // that contains all the methods that are common to all search results. // Then SearchResultImpl could just implement that interface.
71,"// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes. One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement. That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO : we really need to be able to deal with component paths here also; // this is difficult because the hql-sql grammar expects all those node types // to be FromReferenceNodes. One potential fix here would be to convert the // IntoClause to just use a FromClause/FromElement combo (as a child of the // InsertStatement) and move all this logic into the InsertStatement. That's // probably the easiest approach (read: least amount of changes to the grammar // and code), but just doesn't feel right as then an insert would contain // 2 from-clauses

### Response:",DESIGN.
72,// TODO is this the right thing to do?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO is this the right thing to do?

### Response:",DESIGN.
73,// FIXME: legal here? may want UnsupportedOperationException,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: legal here? may want UnsupportedOperationException

### Response:",DESIGN.
74,// TODO: What are these magic numbers?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: What are these magic numbers?

### Response:",DESIGN.
75,"// TODO: Use the SVGWriter2D implementation // cmd = new SaveSVGAction2(Translator.localize(""action.save-svg""));",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Use the SVGWriter2D implementation // cmd = new SaveSVGAction2(Translator.localize(""action.save-svg""));

### Response:",DESIGN. Implement SVGWriter2D interface.
76,// TODO: implement,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: implement

### Response:",IMPLEMENTATION.
77,//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: Should this be an InitializeEntityEventListener??? (watch out for performance!)

### Response:",DESIGN.
78,"// TODO: We'd like to test this in its new guise as PackageImport, but // we don't have a good way to do it currently",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We'd like to test this in its new guise as PackageImport, but // we don't have a good way to do it currently

### Response:",TEST.
79,// TODO: Need UML 2.x equivalent,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Need UML 2.x equivalent

### Response:",IMPLEMENTATION.
80,"// TODO: This exception will be thrown during autoscrolling // when the edge of the canvas is reached causing either // the width or height to be ""adjusted"" to a negative value",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This exception will be thrown during autoscrolling // when the edge of the canvas is reached causing either // the width or height to be ""adjusted"" to a negative value

### Response:",DEFECT.
81,// Does this dialect support the ALTER TABLE syntax?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Does this dialect support the ALTER TABLE syntax?

### Response:",DESIGN.
82,// TODO: must override in RubyModule to pick up constants,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: must override in RubyModule to pick up constants

### Response:",IMPLEMENTATION.
83,// TODO: Hard coded -. JDBC/ODBC bridge JDK1.4 // brings back -9 for nvarchar columns in // MS SQL Server tables. // -8 is ROWID in Oracle.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Hard coded -. JDBC/ODBC bridge JDK1.4 // brings back -9 for nvarchar columns in // MS SQL Server tables. // -8 is ROWID in Oracle.

### Response:",DESIGN. IMPLEMENTATION.
84,"// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// entry exists, proxy doesn't match. replace. // this could happen if old proxy was gc'ed // TODO: raise exception if stored proxy is non-null? (not gc'ed)

### Response:",DESIGN.
85,// Split the methods into constructors and regular method lists,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Split the methods into constructors and regular method lists

### Response:",DESIGN.
86,"//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));

### Response:",DESIGN.
87,/** * Test the constructor used for loading a profile from a Jar file. * TODO: Test FigNode! * * Exception if something goes wrong */,TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Test the constructor used for loading a profile from a Jar file. * TODO: Test FigNode! * * Exception if something goes wrong */

### Response:",TEST.
88,// TODO: Implement following WFR for GeneralizableElements // [4] The parent must be included in the Namespace of the // GeneralizableElement. // self.generalization->forAll(g | // self.namespace.allContents->includes(g.parent) ) // return ModelManagementHelperMDRImpl.getContents(ns).contains( // gen.getParent());,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Implement following WFR for GeneralizableElements // [4] The parent must be included in the Namespace of the // GeneralizableElement. // self.generalization->forAll(g | // self.namespace.allContents->includes(g.parent) ) // return ModelManagementHelperMDRImpl.getContents(ns).contains( // gen.getParent());

### Response:",IMPLEMENTATION.
89,//Maybe do nothing at all?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//Maybe do nothing at all?

### Response:",DESIGN.
90,"// TODO: This is a composite association, so these will get deleted // automatically. The only thing we need to do is check for any // additional elements that need to be deleted as a result.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This is a composite association, so these will get deleted // automatically. The only thing we need to do is check for any // additional elements that need to be deleted as a result.

### Response:",IMPLEMENTATION.
91,/** * The target model element * In UML1.x this is the element that owns the expression. * In UML2.x this is the expression itself * TODO: This makes behaviour different enough that separate subclasses * should be considered. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * The target model element * In UML1.x this is the element that owns the expression. * In UML2.x this is the expression itself * TODO: This makes behaviour different enough that separate subclasses * should be considered. */

### Response:",DESIGN.
92,// ignored - it shouldn't have been in the project in the 1st place,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// ignored - it shouldn't have been in the project in the 1st place

### Response:",DESIGN.
93,// implement the recursion for getClassImpl(),IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// implement the recursion for getClassImpl()

### Response:",IMPLEMENTATION.
94,//TODO no methods yet for getClassname //TODO no method for newInstance using a reverse-classloader,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO no methods yet for getClassname //TODO no method for newInstance using a reverse-classloader

### Response:",DESIGN.
95,"//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: make EntityPersister *not* depend on SessionFactoryImplementor //interface, if possible

### Response:",DESIGN.
96,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
97,// TODO: This needs to be managed on a per-project or per-model/extent // basis,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This needs to be managed on a per-project or per-model/extent // basis

### Response:",DESIGN.
98,// TODO should this throw an error?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO should this throw an error?

### Response:",DESIGN.
99,// TODO: It doesn't matter what these get set to because GEF can't // draw anything except 1 pixel wide lines,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: It doesn't matter what these get set to because GEF can't // draw anything except 1 pixel wide lines

### Response:",DEFECT.
100,// TODO : not sure the best way to handle this. // The non-performant way :,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO : not sure the best way to handle this. // The non-performant way :

### Response:",DESIGN.
101,//TODO: shift block right by half,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: shift block right by half

### Response:",DESIGN.
102,"/** * Information about a source unit and its content, whether * it exists only in memory or it's stored in a file. * * TODO: Making this an interface instead of a class would allow * more flexibility in dealing with non-file-based resources. - tfm * * aslo */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Information about a source unit and its content, whether * it exists only in memory or it's stored in a file. * * TODO: Making this an interface instead of a class would allow * more flexibility in dealing with non-file-based resources. - tfm * * aslo */

### Response:",DESIGN.
103,"// If any subexpressions didn't terminate, they don't count // TODO check if this code ever gets hit",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// If any subexpressions didn't terminate, they don't count // TODO check if this code ever gets hit

### Response:",DEFECT.
104,"// TODO: This code appears to be designed to jump to the diagram // containing the contents of the package that was double clicked // but it looks like it's always searching for the name ""main"" // instead of the package name. // TODO: But in any case, it should be delegating this work to // to something that knows about the diagrams and they contents -tfm",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This code appears to be designed to jump to the diagram // containing the contents of the package that was double clicked // but it looks like it's always searching for the name ""main"" // instead of the package name. // TODO: But in any case, it should be delegating this work to // to something that knows about the diagrams and they contents -tfm

### Response:",DESIGN.
105,// TODO: deal with varargs,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: deal with varargs

### Response:",IMPLEMENTATION.
106,// Workaround for JRUBY-4149,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Workaround for JRUBY-4149

### Response:",DESIGN.
107,// XXX - we are committing CombiningChar and Extender here,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// XXX - we are committing CombiningChar and Extender here

### Response:",DESIGN.
108,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
109,// TODO: This is updating model on a per character basis as // well as unregistering/reregistering event listeners every // character - very wasteful - tfm,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This is updating model on a per character basis as // well as unregistering/reregistering event listeners every // character - very wasteful - tfm

### Response:",DESIGN.
110,// All keys in messages.properties are lowercase (historical reasons?),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// All keys in messages.properties are lowercase (historical reasons?)

### Response:",DESIGN.
111,/** * TODO: this is not done yet. Eventually this will also * feed the rational log. */,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: this is not done yet. Eventually this will also * feed the rational log. */

### Response:",IMPLEMENTATION.
112,"// TODO: Figure out why the selection of the root node in the object tree // is undone if we don't delay. It seems like some other thread racing // to set the selected node to none. When this happens, the detail pane // for the root node disappears when a session is first opened, or when // an ObjectTree frame is created. This is a really crappy and unreliable // way to fix this problem, but it hides the problem for now. A better // understanding of the architecture of session creation is required // before a proper solution can be attempted. RMM 20051217",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Figure out why the selection of the root node in the object tree // is undone if we don't delay. It seems like some other thread racing // to set the selected node to none. When this happens, the detail pane // for the root node disappears when a session is first opened, or when // an ObjectTree frame is created. This is a really crappy and unreliable // way to fix this problem, but it hides the problem for now. A better // understanding of the architecture of session creation is required // before a proper solution can be attempted. RMM 20051217

### Response:",DESIGN.
113,//TODO: handle property-ref,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: handle property-ref

### Response:",DESIGN.
114,/* Primary interpreter set and get variable methods Note: These are squeltching errors... should they? */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* Primary interpreter set and get variable methods Note: These are squeltching errors... should they? */

### Response:",DESIGN.
115,// TODO: better algorithm to set precision needed,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: better algorithm to set precision needed

### Response:",DESIGN. IMPLEMENTATION.
116,"// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).

### Response:",DESIGN.
117,// Motif kludge: we would get something random instead of null. //,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Motif kludge: we would get something random instead of null. //

### Response:",DESIGN.
118,"// TODO: To enable models and subsystems, change this flag // Work started by Markus I believe where does this stand? - Bob.",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: To enable models and subsystems, change this flag // Work started by Markus I believe where does this stand? - Bob.

### Response:",DESIGN.
119,// TODO understand qualifiers,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO understand qualifiers

### Response:",IMPLEMENTATION.
120,/* The next line does not work: */,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* The next line does not work: */

### Response:",DEFECT.
121,// TODO : add this info to the translator and aggregate it here...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO : add this info to the translator and aggregate it here...

### Response:",DESIGN.
122,"// TODO: // MRI behavior: Call ""+"" or ""add"", depending on the call. // But this leads to exceptions when Floats are added. See: // // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: // MRI behavior: Call ""+"" or ""add"", depending on the call. // But this leads to exceptions when Floats are added. See: // // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.

### Response:",DEFECT.
123,"// TODO Should this be OK ? //assertEquals(contentEncoding, s.getContentEncoding()); // Check arguments // We should have one argument, with the value equal to the post body",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO Should this be OK ? //assertEquals(contentEncoding, s.getContentEncoding()); // Check arguments // We should have one argument, with the value equal to the post body

### Response:","DESIGN. // TODO: We should check the content type, not just the encoding."
124,"//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));

### Response:",DESIGN.
125,/** * Models the designers goals in making this design. Provides useful * control information to the Agency so that only critics relevant to * the designers goals are ever executed. * * TODO: Really this should be part of a domain extension * and not the kernel. I have not developed this part of Argo very * much. * * Jason Robbins */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Models the designers goals in making this design. Provides useful * control information to the Agency so that only critics relevant to * the designers goals are ever executed. * * TODO: Really this should be part of a domain extension * and not the kernel. I have not developed this part of Argo very * much. * * Jason Robbins */

### Response:",DESIGN.
126,"/** * Return a list of gravity points around circle which is enclosed * in the bounding box. Convenience method for use by FigInitialState * and FigFinalState. * TODO: As this method is not required by all sub classes, * it would seem sensible to extend FigStateVertex with FigCircleVertex * and only have the relevant concrete Figs extend that and gain this * functionality. * a List of Points */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Return a list of gravity points around circle which is enclosed * in the bounding box. Convenience method for use by FigInitialState * and FigFinalState. * TODO: As this method is not required by all sub classes, * it would seem sensible to extend FigStateVertex with FigCircleVertex * and only have the relevant concrete Figs extend that and gain this * functionality. * a List of Points */

### Response:",DESIGN. Extend FigStateVertex to FigCircleVertex.
127,"/* * java.awt.event.ActionListener actionPerformed(java.awt.event.ActionEvent) * TODO: From ComboBox javadoc - ""This method is public as an * implementation side effect. do not call or override."" * We should find some other way to implement this. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * java.awt.event.ActionListener actionPerformed(java.awt.event.ActionEvent) * TODO: From ComboBox javadoc - ""This method is public as an * implementation side effect. do not call or override."" * We should find some other way to implement this. */

### Response:",DESIGN. Implementing this method is a bad idea.
128,// TODO: Check this result...,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Check this result...

### Response:",DEFECT.
129,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
130,// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes

### Response:",DESIGN.
131,// TODO: no need to calculate every time.,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: no need to calculate every time.

### Response:",IMPLEMENTATION.
132,// charAt(index-n) may be unknown on a Reader/InputStream. FIXME // Match after a newline if in multiline mode,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// charAt(index-n) may be unknown on a Reader/InputStream. FIXME // Match after a newline if in multiline mode

### Response:",DEFECT.
133,// TODO ( fdietz): add error dialog,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO ( fdietz): add error dialog

### Response:",IMPLEMENTATION.
134,//TODO: this requires that the collection is defined after the // referenced property in the mapping file (ok?),DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: this requires that the collection is defined after the // referenced property in the mapping file (ok?)

### Response:",DESIGN.
135,/** * TODO: * comment field doesn't include all options yet */,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: * comment field doesn't include all options yet */

### Response:",IMPLEMENTATION.
136,// self = args[0] // SSS FIXME: Verify that this is correct,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// self = args[0] // SSS FIXME: Verify that this is correct

### Response:",DESIGN.
137,// TODO: Move to different class?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Move to different class?

### Response:",DESIGN.
138,"// TODO: Implement tty? and isatty. We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this. This would allow things like cgi.rb to work properly.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Implement tty? and isatty. We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this. This would allow things like cgi.rb to work properly.

### Response:",IMPLEMENTATION.
139,"//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));

### Response:",DESIGN.
140,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
141,/** * Create an empty but initialized instance of a UML AssociationEnd. * * an initialized UML AssociationEnd instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Create an empty but initialized instance of a UML AssociationEnd. * * an initialized UML AssociationEnd instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */

### Response:",DESIGN. It doesn't make sense to create a new element without knowing where * to put it.
142,// TODO: use the destination database type to derive a format // that is acceptable.,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: use the destination database type to derive a format // that is acceptable.

### Response:",DESIGN. IMPLEMENTATION.
143,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
144,/** * Find the Icon for a given model element. * * The Icon or <code>null</code> if there is no Icon. * value The model element. * * TODO: This should not use string matching on classnames to do this * since this means that we have knowledge about how the model * elements are implemented outside of the Model component. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Find the Icon for a given model element. * * The Icon or <code>null</code> if there is no Icon. * value The model element. * * TODO: This should not use string matching on classnames to do this * since this means that we have knowledge about how the model * elements are implemented outside of the Model component. */

### Response:",DESIGN. Use getIcon(Object) instead.
145,// TODO: Having Critics actions here introduces an unnecessary // dependency on the Critics subsystem. Have it register its // desired actions using an extension mechanism - tfm,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Having Critics actions here introduces an unnecessary // dependency on the Critics subsystem. Have it register its // desired actions using an extension mechanism - tfm

### Response:",DESIGN.
146,"// Don't allow connections to be created from a read only // model element to any other // TODO: This should be considered a workaround. It only works // because, by default, we place newly created relationships in // the namespace of the fromElement. The correct behavior in // the presence of read-only elements really depends on the type of // connection as well as the writeability of both ends.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Don't allow connections to be created from a read only // model element to any other // TODO: This should be considered a workaround. It only works // because, by default, we place newly created relationships in // the namespace of the fromElement. The correct behavior in // the presence of read-only elements really depends on the type of // connection as well as the writeability of both ends.

### Response:",DESIGN.
147,// TODO - how can this be null?,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO - how can this be null?

### Response:",DESIGN.
148,// TODO: Move the magic number 4 to a descriptive constant,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Move the magic number 4 to a descriptive constant

### Response:",DESIGN.
149,// TODO: Lets move this behind the model interface,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Lets move this behind the model interface

### Response:",DESIGN.
150,"// Get available screens // O(n this is nasty, but since we aren't dealling with // many items it should be fine",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Get available screens // O(n this is nasty, but since we aren't dealling with // many items it should be fine

### Response:",DESIGN.
151,// TODO: This method can be replaced by getClass().getSimpleName() // when Argo drops support for Java versions < 1.5,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This method can be replaced by getClass().getSimpleName() // when Argo drops support for Java versions < 1.5

### Response:",DESIGN.
152,// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil,TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil

### Response:",TEST.
153,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
154,//TODO: BUG! this currently fails for named queries for non-POJO entities,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: BUG! this currently fails for named queries for non-POJO entities

### Response:",DEFECT.
155,// TODO: this isn't handling multibyte yet,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: this isn't handling multibyte yet

### Response:",IMPLEMENTATION.
156,// TODO should this implement supportsCustomEditor() ?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO should this implement supportsCustomEditor() ?

### Response:",DESIGN.
157,// TODO: this doesn't belong in the implementation specific piece - tfm,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: this doesn't belong in the implementation specific piece - tfm

### Response:",DESIGN.
158,"// ignore it; the incoming property could not be found so we // cannot be sure what to do here. At the very least, the // safest is to simply not apply any dereference toggling...",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// ignore it; the incoming property could not be found so we // cannot be sure what to do here. At the very least, the // safest is to simply not apply any dereference toggling...

### Response:",DESIGN.
159,/** * Returns names of all metatypes in metamodel. * * TODO: This method rightly belongs in a separate interface dealing * with instances of MOF types as opposed to UML types like all the * rest of the methods here do. * * Collection containing Strings with names of all metatypes */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Returns names of all metatypes in metamodel. * * TODO: This method rightly belongs in a separate interface dealing * with instances of MOF types as opposed to UML types like all the * rest of the methods here do. * * Collection containing Strings with names of all metatypes */

### Response:",DESIGN.
160,// TODO: Needs to be tidied up after stable release. Graph model // should be created in constructor,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Needs to be tidied up after stable release. Graph model // should be created in constructor

### Response:",DESIGN. IMPLEMENTATION. DEFECT.
161,"// Create our bandbuffer which is just a small slice of the image // TODO: We used a fixed height buffer now, but we could be smarter and // compute a height which would fit in some memory budget, allowing us // to use taller buffers with narrower images, minimizing the overhead // of multiple rendering passes",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Create our bandbuffer which is just a small slice of the image // TODO: We used a fixed height buffer now, but we could be smarter and // compute a height which would fit in some memory budget, allowing us // to use taller buffers with narrower images, minimizing the overhead // of multiple rendering passes

### Response:",DESIGN.
162,"// TODO do tests for infix operators (8.4.7), // even though it is not yet supported",TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO do tests for infix operators (8.4.7), // even though it is not yet supported

### Response:",TEST.
163,/* SSS FIXME: Do we need to check if l is same as whatever popped? */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* SSS FIXME: Do we need to check if l is same as whatever popped? */

### Response:",IMPLEMENTATION.
164,// hack... sticking to first interpreter that resolves this // see comments on type instance variable,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// hack... sticking to first interpreter that resolves this // see comments on type instance variable

### Response:",DESIGN.
165,// FIXME: what should this really be? assert x instanceof RubyComplex;,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: what should this really be? assert x instanceof RubyComplex;

### Response:",DESIGN.
166,//TODO: not quite sure about the full implications of this!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: not quite sure about the full implications of this!

### Response:",DESIGN.
167,"// FIXME: if we terminate immediately, this appears to break while in method arguments // we need to push a nil for the cases where we will never enter the body",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: if we terminate immediately, this appears to break while in method arguments // we need to push a nil for the cases where we will never enter the body

### Response:",DEFECT.
168,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...

### Response:",DESIGN.
169,"/** * Return the source of a relation or Link. The source of a relation is * defined as the ModelElement that propagates this relation. If * there are more then 1 sources, only the first is returned. If * there is no source, null is returned. Examples of sources * include classifiers that are types to associationends, usecases * that are bases to extend and include relations and so on. A * source is always the start from the arrow in the fig, the * destination the end.<p> * * TODO: move this method to a generic ModelHelper * * relationship is the relation * Object */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Return the source of a relation or Link. The source of a relation is * defined as the ModelElement that propagates this relation. If * there are more then 1 sources, only the first is returned. If * there is no source, null is returned. Examples of sources * include classifiers that are types to associationends, usecases * that are bases to extend and include relations and so on. A * source is always the start from the arrow in the fig, the * destination the end.<p> * * TODO: move this method to a generic ModelHelper * * relationship is the relation * Object */

### Response:",DESIGN. Move to ModelHelper.
170,"//TODO: inexact, what we really need to know is: are any outer joins used?",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: inexact, what we really need to know is: are any outer joins used?

### Response:",DESIGN.
171,// TODO: should not be using assert here but I don't want to change to // IllegalStateException at lead up to a release as I don't know how // much testing is done with assert on.,TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: should not be using assert here but I don't want to change to // IllegalStateException at lead up to a release as I don't know how // much testing is done with assert on.

### Response:",TEST.
172,// TODO: key can't be null,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: key can't be null

### Response:",DEFECT.
173,"//??? For now, use the same renderer as everyone else. //?? //?? IN FUTURE: change this to use a new instance of renederer //?? for this data type.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//??? For now, use the same renderer as everyone else. //?? //?? IN FUTURE: change this to use a new instance of renederer //?? for this data type.

### Response:",DESIGN.
174,"// doesn't work: Depending on the compression engine used, // compressed bytes may differ. False errors would be // reported. // assertTrue(""File content mismatch"", // FILE_UTILS.contentEquals(project.resolveFile(""expected/asf-logo-huge.tar.bz2""), // project.resolveFile(""asf-logo-huge.tar.bz2"")));",TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// doesn't work: Depending on the compression engine used, // compressed bytes may differ. False errors would be // reported. // assertTrue(""File content mismatch"", // FILE_UTILS.contentEquals(project.resolveFile(""expected/asf-logo-huge.tar.bz2""), // project.resolveFile(""asf-logo-huge.tar.bz2"")));

### Response:",DEFECT.
175,"/* * TODO: MVW: This needs rethinking/rework! I have the following questions: * Why does it not search for a stereotype in the namespace using properties * and only create a new stereotype if it will actually be used? Ie, why is * there not a getStereotype(String name, String baseClass)? (edited by * d00mst) <these comments imported from NSUML implementation - tfm> * * org.argouml.model.ExtensionMechanismsFactory buildStereotype(java.lang.Object, java.lang.Object, java.lang.Object) */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * TODO: MVW: This needs rethinking/rework! I have the following questions: * Why does it not search for a stereotype in the namespace using properties * and only create a new stereotype if it will actually be used? Ie, why is * there not a getStereotype(String name, String baseClass)? (edited by * d00mst) <these comments imported from NSUML implementation - tfm> * * org.argouml.model.ExtensionMechanismsFactory buildStereotype(java.lang.Object, java.lang.Object, java.lang.Object) */

### Response:",DESIGN.
176,// TODO support other name kinds,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO support other name kinds

### Response:",IMPLEMENTATION.
177,"// TODO: A minimal update strategy would be better here to // minimize work and events firing, but it may be better to // deprecate the method and force calls to manage updates // themselves (since they probably usually want to just add // or remove a single element) - tfm 20061108",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: A minimal update strategy would be better here to // minimize work and events firing, but it may be better to // deprecate the method and force calls to manage updates // themselves (since they probably usually want to just add // or remove a single element) - tfm 20061108

### Response:",DESIGN.
178,// I don't know if this should be run this deferred // because we might have to give the editor a chance to process the viewer update events // and hence to update the views first. // //,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// I don't know if this should be run this deferred // because we might have to give the editor a chance to process the viewer update events // and hence to update the views first. // //

### Response:",DESIGN.
179,/** * Builds a default implementation for a class. The class is not owned by * any model element by default. Users should not forget to add ownership. * * newly created Class * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Builds a default implementation for a class. The class is not owned by * any model element by default. Users should not forget to add ownership. * * newly created Class * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */

### Response:",DESIGN. Improve this to have a single parameter that is the model/extent where * the new element should be created.
180,// TODO: More is required here to support referenceValues,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: More is required here to support referenceValues

### Response:",IMPLEMENTATION.
181,// FIXME: use other fields too,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: use other fields too

### Response:",DESIGN.
182,// unused in parent,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// unused in parent

### Response:",DESIGN.
183,// Programming error: bail out.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Programming error: bail out.

### Response:",DESIGN. Defensive programming.
184,"// this is ugly here, but needed because its a subquery",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// this is ugly here, but needed because its a subquery

### Response:",DESIGN.
185,// TODO: Rather than specifically ignore some item maybe it would be better // to specifically state what items are of interest. Otherwise we may still // be acting on other events we don't need,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Rather than specifically ignore some item maybe it would be better // to specifically state what items are of interest. Otherwise we may still // be acting on other events we don't need

### Response:",DESIGN.
186,// TODO finish unmarshalling of all available properties,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO finish unmarshalling of all available properties

### Response:",IMPLEMENTATION.
187,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
188,// TODO: We have multiple string representations for multiplicities // these should be consolidated. This form is used by // org.argouml.uml.reveng,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We have multiple string representations for multiplicities // these should be consolidated. This form is used by // org.argouml.uml.reveng

### Response:",DESIGN.
189,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
190,/** * Builds an actor in the same namespace as the given actor. If * the object is not and actor nothing is built.<p> * * TODO: This shouldn't just silently fail if it is passed a bad * argument. This contract will change. - tfm 20070607 * * model The namespace. * actor the given actor * Actor the newly built actor */,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Builds an actor in the same namespace as the given actor. If * the object is not and actor nothing is built.<p> * * TODO: This shouldn't just silently fail if it is passed a bad * argument. This contract will change. - tfm 20070607 * * model The namespace. * actor the given actor * Actor the newly built actor */

### Response:",DESIGN.
191,"/* * TODO ( karlpeder): Guess that right thing to do is to get height as getDrawingSize().getHeight(), * since this should take top- and bottom margin of this print * object into account. But the height seems not to be set * correctly in computePositionAndSize() (*20030604, karlpeder*) */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * TODO ( karlpeder): Guess that right thing to do is to get height as getDrawingSize().getHeight(), * since this should take top- and bottom margin of this print * object into account. But the height seems not to be set * correctly in computePositionAndSize() (*20030604, karlpeder*) */

### Response:",DEFECT.
192,//hum ... should we cascade anyway? throw an exception? fine like it is?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//hum ... should we cascade anyway? throw an exception? fine like it is?

### Response:",DESIGN.
193,"// Cast to int required as Dimension::setSize(double,double) // doesn't appear to do anything in JDK1.2.2.",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Cast to int required as Dimension::setSize(double,double) // doesn't appear to do anything in JDK1.2.2.

### Response:",DEFECT.
194,// defer argument checking...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// defer argument checking...

### Response:",DESIGN.
195,//TODO: theoretically non-threadsafe...,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: theoretically non-threadsafe...

### Response:",DESIGN.
196,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
197,// TODO: full-precision divmod is 1000x slower than MRI!,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: full-precision divmod is 1000x slower than MRI!

### Response:",DEFECT.
198,/* TODO: We should have all the information that is required in the * NotationSettings object */,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: We should have all the information that is required in the * NotationSettings object */

### Response:",DESIGN. IMPLEMENTATION.
199,"// handle mouse events for double-click creation of popup dialog. // This happens only in the JTextField, not the JTextArea, so we can // make this an inner class within this method rather than a separate // inner class as is done with the KeyTextHandler class. //",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// handle mouse events for double-click creation of popup dialog. // This happens only in the JTextField, not the JTextArea, so we can // make this an inner class within this method rather than a separate // inner class as is done with the KeyTextHandler class. //

### Response:",DESIGN.
200,//DMS should we let this exception out?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//DMS should we let this exception out?

### Response:",DESIGN.
201,// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings? // Or can it happen during optimizations that this becomes a generic operand?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// SSS FIXME: Should this be Operand or CompoundString? // Can it happen that symbols are built out of other than compound strings? // Or can it happen during optimizations that this becomes a generic operand?

### Response:",DESIGN.
202,// regular division with some default precision // TODO: proper algorithm to set the precision,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// regular division with some default precision // TODO: proper algorithm to set the precision

### Response:",DESIGN. IMPLEMENTATION.
203,// TODO: This method is mostly (entirely?) redundant - tfm,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This method is mostly (entirely?) redundant - tfm

### Response:",DESIGN. Redundant method.
204,"// FIXME: Maybe not best place, but move it to a good home",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: Maybe not best place, but move it to a good home

### Response:",DESIGN.
205,"// TODO: This comparison is very suspect, it should use equals // method. The code within the block is in fact never executed. // I hesitate to change this now as it will trigger code has never been // used before and am not aware of any problems that it usage may // introduce. // I do think that we need to be able to find a different way to // implement the intent here which seems to be to correct edge drawings // that should actually not be allowed - Bob",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This comparison is very suspect, it should use equals // method. The code within the block is in fact never executed. // I hesitate to change this now as it will trigger code has never been // used before and am not aware of any problems that it usage may // introduce. // I do think that we need to be able to find a different way to // implement the intent here which seems to be to correct edge drawings // that should actually not be allowed - Bob

### Response:",DESIGN.
206,"// TODO field always true, what for ?",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO field always true, what for ?

### Response:",DESIGN.
207,// should probably error,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// should probably error

### Response:",DESIGN.
208,//this is the temporary solution for issue 1011,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//this is the temporary solution for issue 1011

### Response:",DESIGN.
209,"/* * Algorithm * Check for any level one nullability breaks * Look at non null components to * recursively check next level of nullability breaks * Look at Collections contraining component to * recursively check next level of nullability breaks * * * In the previous implementation, not-null stuffs where checked * filtering by level one only updateable * or insertable columns. So setting a sub component as update=""false"" * has no effect on not-null check if the main component had good checkeability * In this implementation, we keep this feature. * However, I never see any documentation mentioning that, but it's for * sure a limitation. */",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * Algorithm * Check for any level one nullability breaks * Look at non null components to * recursively check next level of nullability breaks * Look at Collections contraining component to * recursively check next level of nullability breaks * * * In the previous implementation, not-null stuffs where checked * filtering by level one only updateable * or insertable columns. So setting a sub component as update=""false"" * has no effect on not-null check if the main component had good checkeability * In this implementation, we keep this feature. * However, I never see any documentation mentioning that, but it's for * sure a limitation. */

### Response:",DOCUMENTATION.
210,//?? Extract this out into a class like CascadeInternalFramePositioner.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//?? Extract this out into a class like CascadeInternalFramePositioner.

### Response:",DESIGN.
211,"/* * Does the system support UNC paths? If so, may need to fix them up * later */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * Does the system support UNC paths? If so, may need to fix them up * later */

### Response:",DESIGN. IMPLEMENTATION. DEFECT.
212,// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:

### Response:",DESIGN.
213,"/** * TODO: this is a bug in the code at the moment. If table ""test"" isn't qualified then this test passes - * so we need to beef up qualified tablename handling. */",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: this is a bug in the code at the moment. If table ""test"" isn't qualified then this test passes - * so we need to beef up qualified tablename handling. */

### Response:",TEST.
214,//This is not very nice (and quite slow):,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//This is not very nice (and quite slow):

### Response:",DESIGN.
215,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
216,// defer argument checking,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// defer argument checking

### Response:",DESIGN.
217,"// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod(""transfer"", cb.getFastOptMethod(""transfer""));",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod(""transfer"", cb.getFastOptMethod(""transfer""));

### Response:",DESIGN.
218,// TODO: anything threads attached to original fd are notified of the close... // see rb_thread_fd_close,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: anything threads attached to original fd are notified of the close... // see rb_thread_fd_close

### Response:",DEFECT.
219,// TODO: All super constrcutors should take a GraphModel,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: All super constrcutors should take a GraphModel

### Response:",DESIGN.
220,//FIXME: get the PersistentClass,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//FIXME: get the PersistentClass

### Response:",DESIGN.
221,"/* TODO: If this is an ordered list, then you have to add in the right location! */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: If this is an ordered list, then you have to add in the right location! */

### Response:",DEFECT.
222,"// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes. Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// VERY IMPORTANT!!!! - This class needs to be free of any static references // to any CGLIB or Javassist classes. Otherwise, users will always need both // on their classpaths no matter which (if either) they use. // // Another option here would be to remove the Hibernate.isPropertyInitialized() // method and have the users go through the SessionFactory to get this information.

### Response:",DESIGN.
223,"// TODO: ActionState, CallState, and SubactivityState have been replaced // in UML 2.0 by explicitly modeled Actions",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: ActionState, CallState, and SubactivityState have been replaced // in UML 2.0 by explicitly modeled Actions

### Response:",DESIGN. IMPLEMENTATION. DEFECT.
224,"/** * Add a path to the list of paths to be searched when looking for XMI files * to resolve external references with. The list is maintained in a static * structure shared by all instances. * <p> * TODO: It's desirable to have separate search paths for separate files, * but more work is required in ArgoUML so that it knows how to maintain * separate contexts for the profiles and user models. * * path * a directory path to add to the search path */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Add a path to the list of paths to be searched when looking for XMI files * to resolve external references with. The list is maintained in a static * structure shared by all instances. * <p> * TODO: It's desirable to have separate search paths for separate files, * but more work is required in ArgoUML so that it knows how to maintain * separate contexts for the profiles and user models. * * path * a directory path to add to the search path */

### Response:",IMPLEMENTATION.
225,"//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//Don't need this, because we should never ever be selecting no columns in an insert ... select... //and because it causes a bug on DB2

### Response:",DEFECT.
226,"// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing. This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing. This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.

### Response:",DEFECT.
227,// Kludge required by GEF's use of HashMap in the API // TODO: This can be removed if they ever fix GEF to use // Maps,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Kludge required by GEF's use of HashMap in the API // TODO: This can be removed if they ever fix GEF to use // Maps

### Response:",DESIGN.
228,// TODO: use the destination database type to derive a // format that is acceptable.,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: use the destination database type to derive a // format that is acceptable.

### Response:",DESIGN. IMPLEMENTATION.
229,// TODO: I18N required,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: I18N required

### Response:",IMPLEMENTATION.
230,// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.

### Response:",DESIGN.
231,// TODO: This should listen for new target events // fired by WizStep.updateTabToDo so that we // can decouple it from the ProjectBrowser.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This should listen for new target events // fired by WizStep.updateTabToDo so that we // can decouple it from the ProjectBrowser.

### Response:",DESIGN.
232,// TODO: consider a conditional feature in the xml panel def for this:,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: consider a conditional feature in the xml panel def for this:

### Response:",IMPLEMENTATION.
233,/** * Create an empty but initialized instance of a UML Component. * * an initialized UML Component instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Create an empty but initialized instance of a UML Component. * * an initialized UML Component instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */

### Response:",DESIGN. It doesn't make sense to create a new element without knowing where to * put it.
234,// todo : we can remove this once the deprecated ctor can be made private...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// todo : we can remove this once the deprecated ctor can be made private...

### Response:",DESIGN.
235,"// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// some messy, complex stuff here, since createCriteria() can take an // aliased path, or a path rooted at the creating criteria instance

### Response:",DESIGN.
236,// Save the .argo entry // TODO: Cyclic dependency with PersistenceManager // move PersistenceManager..getProjectBaseName() someplace else,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Save the .argo entry // TODO: Cyclic dependency with PersistenceManager // move PersistenceManager..getProjectBaseName() someplace else

### Response:",DESIGN.
237,//hence a less elegant workaround that works:,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//hence a less elegant workaround that works:

### Response:",DESIGN.
238,// This is perhaps innefficient timewise? Optimal spacewise,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// This is perhaps innefficient timewise? Optimal spacewise

### Response:",DESIGN.
239,// TODO: It would be nice to throw a better error for this,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: It would be nice to throw a better error for this

### Response:",DESIGN.
240,// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: ConstDecl could be two seperate classes (or done differently since constNode and name // never exist at the same time.

### Response:",DESIGN.
241,// TODO: do we want to fire targetRemoved here or is it enough to just // stop updating the targets?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: do we want to fire targetRemoved here or is it enough to just // stop updating the targets?

### Response:",DESIGN.
242,"// Should we add the ""_"" separator?",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Should we add the ""_"" separator?

### Response:",DESIGN.
243,// a redraw should NOT trigger another change event,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// a redraw should NOT trigger another change event

### Response:",DESIGN.
244,// 18 nov 2003: calling this on a drive letter on Windows causes // drive access,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// 18 nov 2003: calling this on a drive letter on Windows causes // drive access

### Response:",DEFECT.
245,"// TODO: In UML 2.0, ClassifierRole, AssociationRole, and // AssociationEndRole have been replaced by the internal // structure of the Collaboration",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: In UML 2.0, ClassifierRole, AssociationRole, and // AssociationEndRole have been replaced by the internal // structure of the Collaboration

### Response:",DESIGN.
246,// TODO is it possible to use more than one variable?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO is it possible to use more than one variable?

### Response:",IMPLEMENTATION.
247,// TODO: What does the magic number 6000 represent here? // Put it in an explanatory literal! - tfm - 20071205,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: What does the magic number 6000 represent here? // Put it in an explanatory literal! - tfm - 20071205

### Response:",DESIGN.
248,"/** * Returns names of all metamodel value elements including datatypes, * enumerations, and primitive types. * * TODO: This method rightly belongs in a separate interface dealing * with instances of MOF types as opposed to UML types like all the * rest of the methods here do. * * Collection containing Strings with names of all metatypes */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Returns names of all metamodel value elements including datatypes, * enumerations, and primitive types. * * TODO: This method rightly belongs in a separate interface dealing * with instances of MOF types as opposed to UML types like all the * rest of the methods here do. * * Collection containing Strings with names of all metatypes */

### Response:",DESIGN.
249,// FIXME missing full tests for leap year,TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME missing full tests for leap year

### Response:",TEST.
250,// we basically ignore protocol. let someone report it...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// we basically ignore protocol. let someone report it...

### Response:",DESIGN.
251,// MenuBar related methods // TODO: Do we really need to have all these menubar methods duplicated // here? Perhaps we can make the menu bar accessible through GuiPackage?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// MenuBar related methods // TODO: Do we really need to have all these menubar methods duplicated // here? Perhaps we can make the menu bar accessible through GuiPackage?

### Response:",DESIGN.
252,// TODO: this is kinda gross,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: this is kinda gross

### Response:",DESIGN.
253,/* I guess translated events do not have the 'evt' field set so consuming won't work. I don't think this is a problem as nothing uses translation anyway */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* I guess translated events do not have the 'evt' field set so consuming won't work. I don't think this is a problem as nothing uses translation anyway */

### Response:",DEFECT.
254,/** * TODO: This functionality is in the worn place. We should be able to * call setVisible on the compartment itself and then this class should * react to that event. * Improvements will follow in later releases. * Hence this method should not be considered stable for module developers. * compartment the compartment to be changed * isVisible true if the attribute compartment is visible */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: This functionality is in the worn place. We should be able to * call setVisible on the compartment itself and then this class should * react to that event. * Improvements will follow in later releases. * Hence this method should not be considered stable for module developers. * compartment the compartment to be changed * isVisible true if the attribute compartment is visible */

### Response:",DESIGN.
255,// Assume that it's an attribute for now. // It will/could become a reference if the type resolves to an EClass. //,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Assume that it's an attribute for now. // It will/could become a reference if the type resolves to an EClass. //

### Response:",DESIGN.
256,//TODO: implement this method properly,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: implement this method properly

### Response:",DESIGN. Implement this method properly.
257,// TODO is this a sensible number? //$NON-NLS-1$,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO is this a sensible number? //$NON-NLS-1$

### Response:",DESIGN.
258,// TODO save hostname; save sample type (plain or ,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO save hostname; save sample type (plain or

### Response:",IMPLEMENTATION.
259,// TODO: This looks backwards. Left over from issue 2034?,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This looks backwards. Left over from issue 2034?

### Response:",DESIGN.
260,// This is a bit hard coded but if we use _scale here // some number displays go crazy.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// This is a bit hard coded but if we use _scale here // some number displays go crazy.

### Response:",DESIGN.
261,// Check for duplicate name and rename if necessary,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Check for duplicate name and rename if necessary

### Response:",IMPLEMENTATION.
262,// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow! Just to append two darned arrays!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow! Just to append two darned arrays!

### Response:",DESIGN.
263,// synchronized method per JRUBY-1173 (unsafe Double-Checked Locking) // FIXME: synchronization is still wrong in CP code,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// synchronized method per JRUBY-1173 (unsafe Double-Checked Locking) // FIXME: synchronization is still wrong in CP code

### Response:",DEFECT.
264,// FIXME: this should reset to what it was before,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: this should reset to what it was before

### Response:",DESIGN.
265,//set the property values // Note: this may have already been done by another instance of // this DataType created to handle a different column.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//set the property values // Note: this may have already been done by another instance of // this DataType created to handle a different column.

### Response:",DESIGN.
266,"/** * This is the interface for registering interest in events sent from * the model component.<p> * * Neither the registration or unregistration, nor the events themselves * contain any reference to the model implementation. Instead they * use the { java.beans.PropertyChangeListener}, * { java.beans.PropertyChangeEvent} to * deliver events.<p> * * The reference to the listener is a WeakReference so you don't need to * call removeWHATEVERListener, you can just forget about your listener * and it is eventually finalized and removed. This also means that you * will have to keep a reference to your listener while it is active. * Since the garbage collecting mechanism is not really deterministic * a forgotten about listener might still receive events. Unless it can * handle them in a harmless way, this approach should not be used. * * TODO: (Is this still true or does it refer to the NSUML * implementation? - tfm 20051109) * (This is part of the contract that is established between the Model * subsystem and its users. If that is not fulfilled by the current * implementation, then the current implementation is incorrect. * Linus 20060411).<p> * * TODO: What event names? * The event names generated are { String}s and their values and * meanings are not really well documented. In general they are the * name of an an association end or attribute in the UML metamodel.<p> * * Here are some highlights:<ul> * <li>""remove"" - event sent when the element is removed. * </ul> * * Linus Tolke */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * This is the interface for registering interest in events sent from * the model component.<p> * * Neither the registration or unregistration, nor the events themselves * contain any reference to the model implementation. Instead they * use the { java.beans.PropertyChangeListener}, * { java.beans.PropertyChangeEvent} to * deliver events.<p> * * The reference to the listener is a WeakReference so you don't need to * call removeWHATEVERListener, you can just forget about your listener * and it is eventually finalized and removed. This also means that you * will have to keep a reference to your listener while it is active. * Since the garbage collecting mechanism is not really deterministic * a forgotten about listener might still receive events. Unless it can * handle them in a harmless way, this approach should not be used. * * TODO: (Is this still true or does it refer to the NSUML * implementation? - tfm 20051109) * (This is part of the contract that is established between the Model * subsystem and its users. If that is not fulfilled by the current * implementation, then the current implementation is incorrect. * Linus 20060411).<p> * * TODO: What event names? * The event names generated are { String}s and their values and * meanings are not really well documented. In general they are the * name of an an association end or attribute in the UML metamodel.<p> * * Here are some highlights:<ul> * <li>""remove"" - event sent when the element is removed. * </ul> * * Linus Tolke */

### Response:",DOCUMENTATION.
267,// TODO - use or remove,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO - use or remove

### Response:",DESIGN.
268,// TODO: associationclasses fit both of the next 2 cases,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: associationclasses fit both of the next 2 cases

### Response:",DESIGN.
269,"// TODO: Except this won't work because the names are different which // will cause a test in CheckUMLModelHelper to fail // remap.put(""Core:Permission"", ""Core:PackageImport"");",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Except this won't work because the names are different which // will cause a test in CheckUMLModelHelper to fail // remap.put(""Core:Permission"", ""Core:PackageImport"");

### Response:",DEFECT.
270,"/* * Create a TaggedValue with a tag/type matching our source module * filename and a value of the file's last modified timestamp. * * TODO: This functionality needs to be moved someplace useful if * it's needed, otherwise it can be deleted. - tfm - 20070217 */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * Create a TaggedValue with a tag/type matching our source module * filename and a value of the file's last modified timestamp. * * TODO: This functionality needs to be moved someplace useful if * it's needed, otherwise it can be deleted. - tfm - 20070217 */

### Response:",DESIGN.
271,// stupid: caret will automatically be incremented,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// stupid: caret will automatically be incremented

### Response:",DESIGN.
272,// TODO: These 2 should be handled with an Iterator!!!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: These 2 should be handled with an Iterator!!!

### Response:",DESIGN. Implement an Iterator interface for the Collection.
273,// TODO: implement remaining supported types,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: implement remaining supported types

### Response:",IMPLEMENTATION.
274,// TODO: We need to be more specific here about what to build,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We need to be more specific here about what to build

### Response:",DESIGN.
275,// is this an error???,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// is this an error???

### Response:",DESIGN.
276,// TODO ( karlpeder): Implementation of undo/redo missing,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO ( karlpeder): Implementation of undo/redo missing

### Response:",IMPLEMENTATION.
277,"// caching is not correct and doesn't seem to help... // enclosingNameSpace.cacheClass( name, genClass );",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// caching is not correct and doesn't seem to help... // enclosingNameSpace.cacheClass( name, genClass );

### Response:",DEFECT.
278,// FIXME: show a dialog with the error,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: show a dialog with the error

### Response:",IMPLEMENTATION.
279,// TODO: make this do specific-arity calling,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: make this do specific-arity calling

### Response:",DESIGN.
280,"// TODO: the type of the model element used in a type parameter // (ie the formal) needs to match the actual parameter that it // gets replaced with later. This code is going to restrict that // to always being a Parameter which doesn't seem right, but I // don't have time to debug it right now. - tfm - 20090608",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: the type of the model element used in a type parameter // (ie the formal) needs to match the actual parameter that it // gets replaced with later. This code is going to restrict that // to always being a Parameter which doesn't seem right, but I // don't have time to debug it right now. - tfm - 20090608

### Response:",DESIGN.
281,// TODO: This is temporary. We need a new list for UML 2.x // The following UML 1.4 elements are not in UML 2.x,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This is temporary. We need a new list for UML 2.x // The following UML 1.4 elements are not in UML 2.x

### Response:",DESIGN.
282,// TODO: Is there an option we can use to save our ArgoUML version?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Is there an option we can use to save our ArgoUML version?

### Response:",DESIGN.
283,/* Apparently in some environments you can't catch the security exception at all... e.g. as an applet in IE ... will probably have to work around */,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* Apparently in some environments you can't catch the security exception at all... e.g. as an applet in IE ... will probably have to work around */

### Response:",DESIGN.
284,"/*XXX this is not thread-safe, though luck. It isn't supposed to be. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/*XXX this is not thread-safe, though luck. It isn't supposed to be. */

### Response:",DESIGN.
285,"// TODO: We don't really want to do the following, but I'm not sure // what depends on it - tfm - 20070725",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We don't really want to do the following, but I'm not sure // what depends on it - tfm - 20070725

### Response:",DESIGN.
286,//TODO: get SQL rendering out of this package!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: get SQL rendering out of this package!

### Response:",DESIGN.
287,//TODO: would it be better to do a refresh from db?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: would it be better to do a refresh from db?

### Response:",DESIGN.
288,/* TODO: This needs work... * We also need to listen to addition/removal * of states to/from a ClassifierInState. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: This needs work... * We also need to listen to addition/removal * of states to/from a ClassifierInState. */

### Response:",DESIGN.
289,// TODO: This is a part implementation of well-formedness rule // UML1.4.2 - 4.5.3.20 [3] Circular inheritance is not allowed. // not self.allParents->includes(self),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This is a part implementation of well-formedness rule // UML1.4.2 - 4.5.3.20 [3] Circular inheritance is not allowed. // not self.allParents->includes(self)

### Response:",IMPLEMENTATION.
290,"// Arrays of Strings are a special case. // In XMLBeanWriter method ProcessProperty an array of // Strings is turned into a list of StringWrapper objects // in the XML (presumably so that when reading them back // we have a class that we can call setters on). Thus, // when reading back an array of Strings we actually read // an array of StringWrappers, which gives a type mis-match // in the following arrayCopy. Therefore we need to convert // the data that is currently in the StringWrapper objects // into actual Strings.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Arrays of Strings are a special case. // In XMLBeanWriter method ProcessProperty an array of // Strings is turned into a list of StringWrapper objects // in the XML (presumably so that when reading them back // we have a class that we can call setters on). Thus, // when reading back an array of Strings we actually read // an array of StringWrappers, which gives a type mis-match // in the following arrayCopy. Therefore we need to convert // the data that is currently in the StringWrapper objects // into actual Strings.

### Response:",DESIGN.
291,"// looks bad with the OS X L&F, apparently...",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// looks bad with the OS X L&F, apparently...

### Response:",DEFECT.
292,// TODO can this happen?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO can this happen?

### Response:",DESIGN.
293,"/** * Class to manage Project related actions which need to be (or historically * have been) managed as singletons. * * TODO: It's unclear to me whether all of these actually have to be managed as * singletons, but for now I've just moved them from ProjectBrowser as is. - tfm * * Tom Morris */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Class to manage Project related actions which need to be (or historically * have been) managed as singletons. * * TODO: It's unclear to me whether all of these actually have to be managed as * singletons, but for now I've just moved them from ProjectBrowser as is. - tfm * * Tom Morris */

### Response:",DESIGN.
294,"//XXX // All this to get package according to weblogic standards // Can be written better... this is too hacky! // Careful.. similar code in scanDir , but slightly different!!",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//XXX // All this to get package according to weblogic standards // Can be written better... this is too hacky! // Careful.. similar code in scanDir , but slightly different!!

### Response:",DESIGN.
295,// TODO: not in UML 2,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: not in UML 2

### Response:",DEFECT.
296,/** * True if an instance is allowed to be * invisible. This is currently only set true by FigEdgePort. * TODO: FigEdgePort should be removed from the FigNodeModelElement * hierarchy and so the need for this removed. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * True if an instance is allowed to be * invisible. This is currently only set true by FigEdgePort. * TODO: FigEdgePort should be removed from the FigNodeModelElement * hierarchy and so the need for this removed. */

### Response:",DESIGN.
297,// TODO: put these nil guards into tree (bigger than I want to do right now),IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: put these nil guards into tree (bigger than I want to do right now)

### Response:",DESIGN.
298,"// now handle specific plot types (and yes, I know this is some // really ugly code that has to be manually updated any time a new // plot type is added - I should have written something much cooler, // but I didn't and neither did anyone else).",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// now handle specific plot types (and yes, I know this is some // really ugly code that has to be manually updated any time a new // plot type is added - I should have written something much cooler, // but I didn't and neither did anyone else).

### Response:",DESIGN.
299,//Yuck:,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//Yuck:

### Response:",DESIGN.
300,// TODO: Do we care?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Do we care?

### Response:",DESIGN.
301,"/** * Make use of the default visibility, which is public... * TODO: centralise this knowledge. * * org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem valueOfTarget(java.lang.Object) */",DOCUMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Make use of the default visibility, which is public... * TODO: centralise this knowledge. * * org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem valueOfTarget(java.lang.Object) */

### Response:",DOCUMENTATION.
302,"/* * TODO: Delete me * Copyright (C) 2002-2003 Johan Compagner * jcompagner * * This library is free software; you can redistribute it and/or * modify it under the terms of the GNU Lesser General Public * License as published by the Free Software Foundation; either * version 2.1 of the License, or (at your option) any later version. * * This library is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU * Lesser General Public License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * TODO: Delete me * Copyright (C) 2002-2003 Johan Compagner * jcompagner * * This library is free software; you can redistribute it and/or * modify it under the terms of the GNU Lesser General Public * License as published by the Free Software Foundation; either * version 2.1 of the License, or (at your option) any later version. * * This library is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU * Lesser General Public License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA */

### Response:",DESIGN.
303,// TODO: implement this - show some documentation?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: implement this - show some documentation?

### Response:",DOCUMENTATION.
304,// TODO: Implement this better,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Implement this better

### Response:",DESIGN. Implement this better.
305,"// TODO : probably better to calculate these and pass them in, as it'll be more performant",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO : probably better to calculate these and pass them in, as it'll be more performant

### Response:",DESIGN.
306,"//??? For now, use the same renderer as everyone else. //?? //?? IN FUTURE: change this to use a new instance of renederer //?? for this data type.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//??? For now, use the same renderer as everyone else. //?? //?? IN FUTURE: change this to use a new instance of renederer //?? for this data type.

### Response:",DESIGN.
307,"// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// todo: we should really just collect these from the various SelectExpressions, rather than regenerating here

### Response:",DESIGN. IMPLEMENTATION.
308,"//TODO: entities CAN be compared, by PK and entity name, fix this!",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: entities CAN be compared, by PK and entity name, fix this!

### Response:",DESIGN. IMPLEMENTATION.
309,// TODO: These 2 should be handled with an Iterator.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: These 2 should be handled with an Iterator.

### Response:",DESIGN. Improve the API.
310,/** * TODO: These can not simply be translated... */,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: These can not simply be translated... */

### Response:",IMPLEMENTATION.
311,"//??? For now, use the same renderer as everyone else. //?? //?? IN FUTURE: change this to use a new instance of renederer //?? for this data type.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//??? For now, use the same renderer as everyone else. //?? //?? IN FUTURE: change this to use a new instance of renederer //?? for this data type.

### Response:",DESIGN.
312,"// FIXME: This is currently only here because of some problems with IOOutputStream writing to a ""bare"" runtime without a proper scope",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a ""bare"" runtime without a proper scope

### Response:",DESIGN.
313,// TODO: When message are can have some text in red (error) // and some normal then put out errors in red.,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: When message are can have some text in red (error) // and some normal then put out errors in red.

### Response:",IMPLEMENTATION.
314,// TODO: improve this test // $NON-NLS-1$ $NON-NLS-2$ // Missing variable name,TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: improve this test // $NON-NLS-1$ $NON-NLS-2$ // Missing variable name

### Response:",TEST.
315,"/** * TODO: Use the following function to have a dropdown set of tools: * ToolBarFactory.addItemsToToolBar(buttonPanel, actions, true); * Instead, this temporary solution: * * buttonPanel the toolbar * actions an array of actions representing the tool layout */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: Use the following function to have a dropdown set of tools: * ToolBarFactory.addItemsToToolBar(buttonPanel, actions, true); * Instead, this temporary solution: * * buttonPanel the toolbar * actions an array of actions representing the tool layout */

### Response:",DESIGN.
316,// FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error

### Response:",DEFECT.
317,// TODO Hack that should be removed.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO Hack that should be removed.

### Response:",DESIGN.
318,"// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// HACK: in order to have stdout/err act like ttys and flush always, // we set anything assigned to stdout/stderr to sync

### Response:",DESIGN.
319,// inheritance cycle detection (paranoid check),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// inheritance cycle detection (paranoid check)

### Response:",DESIGN.
320,// TODO: Register listener for target ToDo item changes // and for new showStep() requests,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Register listener for target ToDo item changes // and for new showStep() requests

### Response:",IMPLEMENTATION.
321,"/** * Provides query splitting methods, which were originally in QueryTranslator. * <br> * TODO: This will need to be refactored at some point. * * josh */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Provides query splitting methods, which were originally in QueryTranslator. * <br> * TODO: This will need to be refactored at some point. * * josh */

### Response:",DESIGN. Refactor to use the new QueryLoader mechanism.
322,// XXX - should throw an exception instead?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// XXX - should throw an exception instead?

### Response:",DESIGN.
323,// TODO: not in UML 2,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: not in UML 2

### Response:",DEFECT.
324,//is this ok?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//is this ok?

### Response:",DESIGN.
325,// TODO: Hard coded -. JDBC/ODBC bridge JDK1.4 // brings back -9 for nvarchar columns in // MS SQL Server tables.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Hard coded -. JDBC/ODBC bridge JDK1.4 // brings back -9 for nvarchar columns in // MS SQL Server tables.

### Response:",DESIGN. IMPLEMENTATION.
326,// $NON-NLS-1$ // TODO can this be obtained from the file somehow?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// $NON-NLS-1$ // TODO can this be obtained from the file somehow?

### Response:",DESIGN.
327,// TODO: URLEncode?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: URLEncode?

### Response:",DESIGN.
328,"// Strip off drive letters! // REVIEW Would a better check be ""(File.separator == '\')""?",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Strip off drive letters! // REVIEW Would a better check be ""(File.separator == '\')""?

### Response:",DESIGN.
329,// TODO: encapsulate the protected instance variables!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: encapsulate the protected instance variables!

### Response:",DESIGN.
330,// XXX - should throw an exception instead?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// XXX - should throw an exception instead?

### Response:",DESIGN.
331,//TODO: does this really need to be here? // does the collection already have // it's own up-to-date snapshot?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: does this really need to be here? // does the collection already have // it's own up-to-date snapshot?

### Response:",DESIGN.
332,// hack to make sure that the right height is // applied when no icon is used.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// hack to make sure that the right height is // applied when no icon is used.

### Response:",DESIGN.
333,/* TODO: What if used elsewhere? */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: What if used elsewhere? */

### Response:",DESIGN. Defensive copy.
334,"// TODO: the '\n' literal here should be a test against REToken.newline, // which unfortunately may be more than a single character.",TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: the '\n' literal here should be a test against REToken.newline, // which unfortunately may be more than a single character.

### Response:",DESIGN.
335,/** * An annotation that allows an image to be placed at some location on * an { XYPlot}. * * TODO: implement serialization properly (image is not serializable). */,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * An annotation that allows an image to be placed at some location on * an { XYPlot}. * * TODO: implement serialization properly (image is not serializable). */

### Response:",DESIGN. Implement serialization properly.
336,// TODO: 2nd next() for single hasNext(),IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: 2nd next() for single hasNext()

### Response:",DESIGN.
337,"// FIXME: This is currently only here because of some problems with IOOutputStream writing to a ""bare"" runtime without a proper scope",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: This is currently only here because of some problems with IOOutputStream writing to a ""bare"" runtime without a proper scope

### Response:",DESIGN.
338,// TODO should this set the thread names for all the subsamples? // might be more efficient than fetching the name elsewehere,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO should this set the thread names for all the subsamples? // might be more efficient than fetching the name elsewehere

### Response:",DESIGN.
339,/* Thanks to Slava Pestov (of jEdit fame) for import caching enhancements. Note: This class has gotten too big. It should be broken down a bit. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* Thanks to Slava Pestov (of jEdit fame) for import caching enhancements. Note: This class has gotten too big. It should be broken down a bit. */

### Response:",DESIGN. Enhancement.
340,// TODO: getAllPossibleSubvertices and getAllSubStates are duplicates - tfm,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: getAllPossibleSubvertices and getAllSubStates are duplicates - tfm

### Response:",DESIGN. Duplicate method.
341,// TODO ( fdietz): fix account info panel check,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO ( fdietz): fix account info panel check

### Response:",DESIGN.
342,"// // We have to deal with assembly!!! // The programmer can be writing little 32 byte chunks for all // we know, and we must assemble complete records for writing. // REVIEW Maybe this should be in TarBuffer? Could that help to // eliminate some of the buffer copying. //",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// // We have to deal with assembly!!! // The programmer can be writing little 32 byte chunks for all // we know, and we must assemble complete records for writing. // REVIEW Maybe this should be in TarBuffer? Could that help to // eliminate some of the buffer copying. //

### Response:",DESIGN.
343,// TODO: treat Message,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: treat Message

### Response:",IMPLEMENTATION.
344,//TO DO : delete the file if it is not a valid file.,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TO DO : delete the file if it is not a valid file.

### Response:",DESIGN.
345,"// hack for to do items only, should check isLeaf(node), but that // includes empty folders. Really I need alwaysLeaf(node).",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// hack for to do items only, should check isLeaf(node), but that // includes empty folders. Really I need alwaysLeaf(node).

### Response:",DESIGN.
346,"/* * JMeterTreeNode and TestBeanGUI are special GUI classes, and * aren't intended to be added to menus * * TODO: find a better way of checking this */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * JMeterTreeNode and TestBeanGUI are special GUI classes, and * aren't intended to be added to menus * * TODO: find a better way of checking this */

### Response:",DESIGN.
347,/* TODO: What if used elsewhere? */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: What if used elsewhere? */

### Response:",DESIGN. Defensive copy.
348,// TODO: There's a cyclic dependency between FigConcurrentRegion and // the actions ActionAddConcurrentRegion,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: There's a cyclic dependency between FigConcurrentRegion and // the actions ActionAddConcurrentRegion

### Response:",DESIGN.
349,// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level. Are you kidding me? // Trivial to fix then. Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: is it really neceassry to provide Configuration to CollectionPersisters ? Should it not be enough with associated class ? // or why does EntityPersister's not get access to configuration ? // // The only reason I could see that Configuration gets passed to collection persisters // is so that they can look up the dom4j node name of the entity element in case // no explicit node name was applied at the collection element level. Are you kidding me? // Trivial to fix then. Just store and expose the node name on the entity persister // (which the collection persister looks up anyway via other means...).

### Response:",DESIGN.
350,"/* this is stupid and misleading. * but 'path' is not used anywhere except * the above line, and if this is done * after the 'continue', then we will * either hang, or be forced to duplicate * it inside the buffer == null, or add * a 'finally' clause. you decide which one's * worse. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* this is stupid and misleading. * but 'path' is not used anywhere except * the above line, and if this is done * after the 'continue', then we will * either hang, or be forced to duplicate * it inside the buffer == null, or add * a 'finally' clause. you decide which one's * worse. */

### Response:",DESIGN.
351,// On Win 2000 & XP mnemonics are normally hidden. To make them // visible you press the alt key. Under the Windows L&F pressing // alt may not work. This code is a workaround. See bug report // 4736093 for more information.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// On Win 2000 & XP mnemonics are normally hidden. To make them // visible you press the alt key. Under the Windows L&F pressing // alt may not work. This code is a workaround. See bug report // 4736093 for more information.

### Response:",DESIGN.
352,// TODO: This seems like a brute force workaround (and a very // indirect one at that). It appears to be needed though until // we fix the problem properly. - tfm 20070904,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This seems like a brute force workaround (and a very // indirect one at that). It appears to be needed though until // we fix the problem properly. - tfm 20070904

### Response:",DESIGN.
353,// defer argument checking,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// defer argument checking

### Response:",DESIGN.
354,// This should probably be in Reflect.java,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// This should probably be in Reflect.java

### Response:",DESIGN.
355,"// Don't use ""real"" type. Axion sets the column size to 12 by default, // yet it can handle more precision. So data being copied from the real // column can potentially be larger than what the column claims to support. // This will be a problem for other databases that pay attention to the // column size. // TODO: Perhaps re-introduce the REAL type, but use the new // getPrecisionDigits to max out the precision.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Don't use ""real"" type. Axion sets the column size to 12 by default, // yet it can handle more precision. So data being copied from the real // column can potentially be larger than what the column claims to support. // This will be a problem for other databases that pay attention to the // column size. // TODO: Perhaps re-introduce the REAL type, but use the new // getPrecisionDigits to max out the precision.

### Response:",DESIGN.
356,// not very nice but will do the job,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not very nice but will do the job

### Response:",DESIGN.
357,/** rb_obj_id * * Return the internal id of an object. * * FIXME: Should this be renamed to match its ruby name? */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** rb_obj_id * * Return the internal id of an object. * * FIXME: Should this be renamed to match its ruby name? */

### Response:",DESIGN.
358,/* TODO: correctly implement next function * in the model subsystem for * issue 1942: */,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: correctly implement next function * in the model subsystem for * issue 1942: */

### Response:",IMPLEMENTATION.
359,"// Do nothing for now, and avoid propagating the exception. // How should builders handle cancel?",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Do nothing for now, and avoid propagating the exception. // How should builders handle cancel?

### Response:",DESIGN.
360,// TODO: wire into new exception handling mechanism,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: wire into new exception handling mechanism

### Response:",DESIGN.
361,// Object to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can // remove this hack too.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Object to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can // remove this hack too.

### Response:",DESIGN.
362,"// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)

### Response:",DEFECT.
363,/** * Create an empty but initialized instance of a UML Parameter. * * an initialized UML Parameter instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Create an empty but initialized instance of a UML Parameter. * * an initialized UML Parameter instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */

### Response:",DESIGN. It doesn't make sense to create a new element without knowing where to * put it.
364,// TODO : or should we return 'containsTableAlias'??,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO : or should we return 'containsTableAlias'??

### Response:",DESIGN.
365,/** * Get value from current scope or one of its captured scopes. * * FIXME: block variables are not getting primed to nil so we need to null check those * until we prime them properly. Also add assert back in. * * offset zero-indexed value that represents where variable lives * depth how many captured scopes down this variable should be set * the value here */,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Get value from current scope or one of its captured scopes. * * FIXME: block variables are not getting primed to nil so we need to null check those * until we prime them properly. Also add assert back in. * * offset zero-indexed value that represents where variable lives * depth how many captured scopes down this variable should be set * the value here */

### Response:",DEFECT.
366,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
367,/*TODO create javadocs for class */,DOCUMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/*TODO create javadocs for class */

### Response:",DOCUMENTATION.
368,//TODO: is this 100% correct?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: is this 100% correct?

### Response:",DESIGN.
369,// TODO implement me!,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO implement me!

### Response:",IMPLEMENTATION.
370,// TODO: this should be a configurable property,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: this should be a configurable property

### Response:",DESIGN.
371,// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// here we tweak the notify flag on the plot so that only // one notification happens even though we update multiple // axes...

### Response:",DESIGN.
372,// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// this is called by SessionFactory irregardless; we just disregard here; // could also add a check to SessionFactory to only conditionally call start

### Response:",DESIGN.
373,"// TODO: A better implementation would be to batch events into // logical groups and update the tree one time for the entire // group, synchronizing access to the model repository so that // it stays consistent during the query. This would likely // require doing the updates in a different thread than the // event delivery thread to prevent deadlocks, so for right now // we protect ourselves with try/catch blocks.",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: A better implementation would be to batch events into // logical groups and update the tree one time for the entire // group, synchronizing access to the model repository so that // it stays consistent during the query. This would likely // require doing the updates in a different thread than the // event delivery thread to prevent deadlocks, so for right now // we protect ourselves with try/catch blocks.

### Response:",DESIGN.
374,// TODO: Encountering a deleted object during // any part of this traversal will // abort the rest of the traversal. // We probably should do the whole traversal // in a single MDR transaction.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Encountering a deleted object during // any part of this traversal will // abort the rest of the traversal. // We probably should do the whole traversal // in a single MDR transaction.

### Response:",DESIGN.
375,// TODO: pass this in?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: pass this in?

### Response:",DESIGN.
376,//should this interface extend PropertyMapping?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//should this interface extend PropertyMapping?

### Response:",DESIGN.
377,// TODO: This creates a dependency on the Critics subsystem. // We need a generic way for modules (including our internal // subsystems) to request addition of actions to the popup // menu. - tfm 20080430,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This creates a dependency on the Critics subsystem. // We need a generic way for modules (including our internal // subsystems) to request addition of actions to the popup // menu. - tfm 20080430

### Response:",DESIGN.
378,/** * This is a template method called by the ArgoUML framework as the result * of a change to a model element. Do not call this method directly * yourself. * <p>Override this in any subclasses in order to change what model * elements the FigNode is listening to as a result of change to the model. * </p> * <p>This method is guaranteed by the framework to be running on the same * thread as the model subsystem.</p> * TODO: Lets refactor this at some time to take UmlChangeEvent argument * * event the UmlChangeEvent that caused the change */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * This is a template method called by the ArgoUML framework as the result * of a change to a model element. Do not call this method directly * yourself. * <p>Override this in any subclasses in order to change what model * elements the FigNode is listening to as a result of change to the model. * </p> * <p>This method is guaranteed by the framework to be running on the same * thread as the model subsystem.</p> * TODO: Lets refactor this at some time to take UmlChangeEvent argument * * event the UmlChangeEvent that caused the change */

### Response:",DESIGN.
379,"// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: specifying soft refs, may want to compare memory consumption, // behavior with weak refs (specify WEAK in place of SOFT below)

### Response:",DESIGN.
380,// ignore...bean doesn't get registered // TODO: Why does that bother me?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// ignore...bean doesn't get registered // TODO: Why does that bother me?

### Response:",DESIGN.
381,"/* * TODO: As currently coded, this actually returns all BehavioralFeatures * which are owned by Classifiers contained in the given namespace, which * is slightly different then what's documented. It will not include any * BehavioralFeatures which are part of the Namespace, but which don't have * an owner. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * TODO: As currently coded, this actually returns all BehavioralFeatures * which are owned by Classifiers contained in the given namespace, which * is slightly different then what's documented. It will not include any * BehavioralFeatures which are part of the Namespace, but which don't have * an owner. */

### Response:",DOCUMENTATION.
382,"// XXX Wrong, but will have to do for now",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// XXX Wrong, but will have to do for now

### Response:",DEFECT.
383,"/** * Finds the operation to which a CallEvent refers, based on the given * transition. This function determines the context of the statemachine * that contains the given transition. If the context is a Classifier, then * all operations of this classifier are candidates. If the context is a * BehavioralFeature, then all operations of the owner Classifier are * candidates. The first operation of which the name matches is the result. * For Activity diagrams: If the context is a Package, then * all Operations of all Classifiers in the package are candidates. * TODO: This function works for the most normal cases, * but needs some testing for rare cases, e.g. internal transitions,... * TODO: The Parameters of the candidates are ignored. Maybe this * method should return a set of matching operations. * * MVW * trans Object of type Transition * opname the name of the operation sought * Object the operation with the given name, or null */",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Finds the operation to which a CallEvent refers, based on the given * transition. This function determines the context of the statemachine * that contains the given transition. If the context is a Classifier, then * all operations of this classifier are candidates. If the context is a * BehavioralFeature, then all operations of the owner Classifier are * candidates. The first operation of which the name matches is the result. * For Activity diagrams: If the context is a Package, then * all Operations of all Classifiers in the package are candidates. * TODO: This function works for the most normal cases, * but needs some testing for rare cases, e.g. internal transitions,... * TODO: The Parameters of the candidates are ignored. Maybe this * method should return a set of matching operations. * * MVW * trans Object of type Transition * opname the name of the operation sought * Object the operation with the given name, or null */

### Response:",TEST.
384,/** * Gets the current threshold. * * TODO: Should this be protected? * * The current threshold. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Gets the current threshold. * * TODO: Should this be protected? * * The current threshold. */

### Response:",DESIGN.
385,// This inner class implements a case statement....perhaps im being a bit over-clever here,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// This inner class implements a case statement....perhaps im being a bit over-clever here

### Response:",DESIGN.
386,// TODO: handle writing into original buffer better,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: handle writing into original buffer better

### Response:",DESIGN.
387,"/** * Jakarta Commons Logging listener. * Note: do not use the SimpleLog as your logger implementation as it * causes an infinite loop since it writes to System.err, which Ant traps * and reroutes to the logger/listener layer. * * The following names are used for the log: * org.apache.tools.ant.Project.PROJECT_NAME - for project events * org.apache.tools.ant.Target.TARGET_NAME - for target events * TASK_CLASS_NAME.TARGET_NAME - for events in individual targets. * * In all target and project names we replace ""."" and "" "" with ""-"". * * TODO: we should use the advanced context logging features (and expose them * in c-l first :-) * TODO: this is _very_ inefficient. Switching the out and tracking the logs * can be optimized a lot - but may require few more changes to the core. * * Ant 1.5 */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Jakarta Commons Logging listener. * Note: do not use the SimpleLog as your logger implementation as it * causes an infinite loop since it writes to System.err, which Ant traps * and reroutes to the logger/listener layer. * * The following names are used for the log: * org.apache.tools.ant.Project.PROJECT_NAME - for project events * org.apache.tools.ant.Target.TARGET_NAME - for target events * TASK_CLASS_NAME.TARGET_NAME - for events in individual targets. * * In all target and project names we replace ""."" and "" "" with ""-"". * * TODO: we should use the advanced context logging features (and expose them * in c-l first :-) * TODO: this is _very_ inefficient. Switching the out and tracking the logs * can be optimized a lot - but may require few more changes to the core. * * Ant 1.5 */

### Response:",DESIGN. Inefficient.
388,"// This is (a logically not sufficent) try to cope with the problem that there are the following // contradictory rules in the JDBC API Doc: // Statement.getResultSet(): // This method should be called only once per result. // Statement.getUpdateCount(): // This method should be called only once per result. // Statement.getMoreResults(): // There are no more results when the following is true: (!getMoreResults() && (getUpdateCount() == -1) // // If getMoreResults() returns false, we don't know if we have more results, we only know that it isn't // a result set. Since we called getUpdateCount() before getMoreResults() because we would like to know // the update count of the first result, we might not be allowed to call getUpdateCount() again. // // The Intersystems Cache Driver for example always returns the same updateCount on simple // INSERT, UPDATE, DELETE statements not matter if getMoreResults() was called. So updateCount never // gets -1 and this will loop forever. When I discussed the issue with the Intersystems people they // just told me not to call getUpdateCount() twice. That simple. My hope is that this will cure // problems with DBs that just don't care for multiple result sets.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// This is (a logically not sufficent) try to cope with the problem that there are the following // contradictory rules in the JDBC API Doc: // Statement.getResultSet(): // This method should be called only once per result. // Statement.getUpdateCount(): // This method should be called only once per result. // Statement.getMoreResults(): // There are no more results when the following is true: (!getMoreResults() && (getUpdateCount() == -1) // // If getMoreResults() returns false, we don't know if we have more results, we only know that it isn't // a result set. Since we called getUpdateCount() before getMoreResults() because we would like to know // the update count of the first result, we might not be allowed to call getUpdateCount() again. // // The Intersystems Cache Driver for example always returns the same updateCount on simple // INSERT, UPDATE, DELETE statements not matter if getMoreResults() was called. So updateCount never // gets -1 and this will loop forever. When I discussed the issue with the Intersystems people they // just told me not to call getUpdateCount() twice. That simple. My hope is that this will cure // problems with DBs that just don't care for multiple result sets.

### Response:",DESIGN.
389,//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: we should provide some way to get keys of collection of statistics to make it easier to retrieve from a GUI perspective

### Response:",DESIGN.
390,// TODO only clear the relevant entry - if possible...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO only clear the relevant entry - if possible...

### Response:",DESIGN.
391,// TODO: We really only care about events which affect things that // are visible in the current perspective (view). This could be // tailored to cut down on event traffic. - tfm 20060410,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We really only care about events which affect things that // are visible in the current perspective (view). This could be // tailored to cut down on event traffic. - tfm 20060410

### Response:",DESIGN. IMPLEMENTATION.
392,// TODO: Is it removed from UML2 ?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Is it removed from UML2 ?

### Response:",IMPLEMENTATION.
393,"// Status as of Nov. 2008 - Figs created, property panels exist, more // work required on explorer and assumptions about models not being // nested - tfm",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Status as of Nov. 2008 - Figs created, property panels exist, more // work required on explorer and assumptions about models not being // nested - tfm

### Response:",DESIGN.
394,// Empty implementation.,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Empty implementation.

### Response:",IMPLEMENTATION.
395,/** * TODO: Move this to IOUtilities Extracts the specified zip file to the specified output directory. * * zipFile * outputDirectory * IOException */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: Move this to IOUtilities Extracts the specified zip file to the specified output directory. * * zipFile * outputDirectory * IOException */

### Response:",DESIGN.
396,// TODO should we just collect these like with the collections above?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO should we just collect these like with the collections above?

### Response:",DESIGN.
397,"// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.

### Response:",DESIGN. Duplicate.
398,// Look for a default invoke() handler method in the namespace // Note: this code duplicates that in This.java... should it? // Call on 'This' can never be a command,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Look for a default invoke() handler method in the namespace // Note: this code duplicates that in This.java... should it? // Call on 'This' can never be a command

### Response:",DESIGN.
399,// FIXME Hacky workaround to JBCACHE-1202,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME Hacky workaround to JBCACHE-1202

### Response:",DESIGN.
400,/** * Creates a new OCL critic * * oclConstraint ocl expression * headline headline * description description * moreInfoURL the info url * knowledgeTypes the knowledge types * supportedDecisions the decisions * priority the priority * InvalidOclException if the ocl is not valid * * TODO: Do these need to be Lists or can they be simple Collections? */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Creates a new OCL critic * * oclConstraint ocl expression * headline headline * description description * moreInfoURL the info url * knowledgeTypes the knowledge types * supportedDecisions the decisions * priority the priority * InvalidOclException if the ocl is not valid * * TODO: Do these need to be Lists or can they be simple Collections? */

### Response:",DESIGN.
401,"/** * SQLFilterAction.java * * Created on March 22, 2003, 10:55 AM * * Adapted from SessionPropertiesAction.java by Colin Bell. * * TODO: CHange name to ContentsTabFilterAction */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * SQLFilterAction.java * * Created on March 22, 2003, 10:55 AM * * Adapted from SessionPropertiesAction.java by Colin Bell. * * TODO: CHange name to ContentsTabFilterAction */

### Response:",DESIGN.
402,// TODO: Move to GEF,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Move to GEF

### Response:",DESIGN.
403,// Yuck: TIFFImageEncoder uses Error to report runtime problems,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Yuck: TIFFImageEncoder uses Error to report runtime problems

### Response:",DESIGN.
404,"// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals(""FFFTFFFFFFFF"", results); // Unix // vs //assertEquals(""FFFTFFFFTFFF"", results); // Windows",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals(""FFFTFFFFFFFF"", results); // Unix // vs //assertEquals(""FFFTFFFFTFFF"", results); // Windows

### Response:",DEFECT.
405,// defer argument checking...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// defer argument checking...

### Response:",DESIGN.
406,//TODO: should fire its own event and ProjectBrowser //should register a listener,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: should fire its own event and ProjectBrowser //should register a listener

### Response:",DESIGN.
407,"// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better

### Response:",DESIGN.
408,/* * TODO: This should not be public. Check all usages of it * and put appropriate methods in an API object. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * TODO: This should not be public. Check all usages of it * and put appropriate methods in an API object. */

### Response:",DESIGN.
409,"// TODO"" What is the purpose of this? Why do we hide buttons here? // Presumably if so we should not assume SelectionClass",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO"" What is the purpose of this? Why do we hide buttons here? // Presumably if so we should not assume SelectionClass

### Response:",DESIGN.
410,"// FIXME: Add at_exit and finalizers to exit, then make exit_bang not call those.",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: Add at_exit and finalizers to exit, then make exit_bang not call those.

### Response:",IMPLEMENTATION.
411,"// If is a classifier role, it must return the sent messages. // In other cases, returns an empty list. // TODO: Must be the incoming messages or the sent ones?",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// If is a classifier role, it must return the sent messages. // In other cases, returns an empty list. // TODO: Must be the incoming messages or the sent ones?

### Response:",DESIGN.
412,"// -------------------- Access to property tables -------------------- // This is used to support ant call and similar tasks. It should be // deprecated, it is possible to use a better (more efficient) // mechanism to preserve the context.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// -------------------- Access to property tables -------------------- // This is used to support ant call and similar tasks. It should be // deprecated, it is possible to use a better (more efficient) // mechanism to preserve the context.

### Response:",DESIGN.
413,// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?

### Response:",DESIGN.
414,// clear name resolvers... don't know if this is necessary.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// clear name resolvers... don't know if this is necessary.

### Response:",DESIGN.
415,//real hacky... // used to count the nesting of parentheses,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//real hacky... // used to count the nesting of parentheses

### Response:",DESIGN.
416,//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: the i==entitySpan-1 bit depends upon subclass implementation (very bad)

### Response:",DESIGN.
417,/** * Copy a file from source to destination. * * TODO: Perhaps belongs in a utilities class of some sort. * * source the source file to be copied * dest the destination file * success status flag */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Copy a file from source to destination. * * TODO: Perhaps belongs in a utilities class of some sort. * * source the source file to be copied * dest the destination file * success status flag */

### Response:",DESIGN.
418,// defer argument checking...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// defer argument checking...

### Response:",DESIGN.
419,// I'm too tired to think of a better way // to handle this right now.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// I'm too tired to think of a better way // to handle this right now.

### Response:",DESIGN.
420,// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!),DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// note that this timestamp is not correct if the connection provider // returns an older JDBC connection that was associated with a // transaction that was already begun before openSession() was called // (don't know any possible solution to this!)

### Response:",DEFECT.
421,// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?

### Response:",DESIGN.
422,"/** * Loads the project file and opens all kinds of error message windows * if it doesn't work for some reason. In those cases it preserves * the old project. * * file the file to open. * showUI true if an error message may be shown to the user, * false if run in commandline mode * pmw the ProgressMonitor to be updated; * if not needed, use null * true if the file was successfully opened * * TODO: Separate this into a Swing specific class - tfm */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Loads the project file and opens all kinds of error message windows * if it doesn't work for some reason. In those cases it preserves * the old project. * * file the file to open. * showUI true if an error message may be shown to the user, * false if run in commandline mode * pmw the ProgressMonitor to be updated; * if not needed, use null * true if the file was successfully opened * * TODO: Separate this into a Swing specific class - tfm */

### Response:",DESIGN.
423,// defer argument checking,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// defer argument checking

### Response:",DESIGN.
424,"// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...

### Response:",DESIGN.
425,/** * We are getting events we don't want. Filter them out. * TODO: Can we instruct the model event pump not to send these in the * first place? See defect 5095. * event the event */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * We are getting events we don't want. Filter them out. * TODO: Can we instruct the model event pump not to send these in the * first place? See defect 5095. * event the event */

### Response:",DESIGN.
426,"//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);

### Response:",DESIGN.
427,"// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries. This ""works"" for the time being because really // only the collection load contexts are implemented. Long term, // this cleanup should become part of the ""close result set"" // processing from the (sandbox/jdbc) jdbc-container code.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// todo : hack!!! // NOTE : here we cleanup the load context when we have no more local // LCE entries. This ""works"" for the time being because really // only the collection load contexts are implemented. Long term, // this cleanup should become part of the ""close result set"" // processing from the (sandbox/jdbc) jdbc-container code.

### Response:",DESIGN.
428,// switch eats a multi-level break here? // not empty statement,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// switch eats a multi-level break here? // not empty statement

### Response:",DESIGN.
429,// FIXME: missing arity check,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: missing arity check

### Response:",IMPLEMENTATION.
430,/** * In contrast to {  getZipName()} returns the member's * name without the prepended name of the project * (but with the extension). <p> * * TODO: This is not used anywhere - shall we remove it? * * Steffen Zschaler * * the member's name without any prefix or suffix */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * In contrast to {  getZipName()} returns the member's * name without the prepended name of the project * (but with the extension). <p> * * TODO: This is not used anywhere - shall we remove it? * * Steffen Zschaler * * the member's name without any prefix or suffix */

### Response:",DESIGN.
431,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
432,//TODO: algorithm is n in number of nodes,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: algorithm is n in number of nodes

### Response:",DESIGN.
433,// TODO: Numeric.new works in Ruby and it does here too. However trying to use // that instance in a numeric operation should generate an ArgumentError. Doing // this seems so pathological I do not see the need to fix this now.,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Numeric.new works in Ruby and it does here too. However trying to use // that instance in a numeric operation should generate an ArgumentError. Doing // this seems so pathological I do not see the need to fix this now.

### Response:",DEFECT.
434,"//TODO: should this be Session.instantiate(Persister, ...)?",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: should this be Session.instantiate(Persister, ...)?

### Response:",DESIGN. I don't think we need to clone the id generator if we are not going to clone the cache.
435,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
436,"/** * TODO: The code implementing this method is from 2003 (see issue 2171) - * mechanically integrated by tfmorris in May 2007. Needs to be * reviewed/updated. * * Decki,Endi,Yayan, Politechnic of Bandung. Computer Departement * method for changing text of Message * newOwner model element which should now be listened to */",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: The code implementing this method is from 2003 (see issue 2171) - * mechanically integrated by tfmorris in May 2007. Needs to be * reviewed/updated. * * Decki,Endi,Yayan, Politechnic of Bandung. Computer Departement * method for changing text of Message * newOwner model element which should now be listened to */

### Response:",DESIGN.
437,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
438,//TODO: Return content type according to the mime part in the mail,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: Return content type according to the mime part in the mail

### Response:",DESIGN.
439,"/** * Create and register diagrams for activity and statemachines in the * model(s) of the project. If no other diagrams are created, a default * Class Diagram will be created. ArgoUML currently requires at least one * diagram for proper operation. * * TODO: Move to XmiFilePersister (protected) * * project * The project */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Create and register diagrams for activity and statemachines in the * model(s) of the project. If no other diagrams are created, a default * Class Diagram will be created. ArgoUML currently requires at least one * diagram for proper operation. * * TODO: Move to XmiFilePersister (protected) * * project * The project */

### Response:",DESIGN.
440,/* * Not clear what can cause this ? conflicting versions perhaps */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * Not clear what can cause this ? conflicting versions perhaps */

### Response:",DESIGN.
441,// TODO only clear the relevant entry - if possible...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO only clear the relevant entry - if possible...

### Response:",DESIGN.
442,"// TODO: No one should be sending the deprecated event // from outside ArgoUML, but keep responding to it for now // just in case",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: No one should be sending the deprecated event // from outside ArgoUML, but keep responding to it for now // just in case

### Response:",DESIGN.
443,// TODO: Not implemented by eUML,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Not implemented by eUML

### Response:",IMPLEMENTATION.
444,"// If no Fig was created by the code above then we must go // look for the old style constructor that should have fallen // into disuse by now. // Fig(Object, Rectangle, DiagramSettings) // All of these constructors should have been deprecated // at least and replaced with the new signature. This is // here for paranoia only until all Figs have been reviewed.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// If no Fig was created by the code above then we must go // look for the old style constructor that should have fallen // into disuse by now. // Fig(Object, Rectangle, DiagramSettings) // All of these constructors should have been deprecated // at least and replaced with the new signature. This is // here for paranoia only until all Figs have been reviewed.

### Response:",DESIGN.
445,// TODO: All super constrcutors should take a GraphModel,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: All super constrcutors should take a GraphModel

### Response:",DESIGN.
446,// TODO: ruby locks the string here,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: ruby locks the string here

### Response:",DEFECT.
447,/** * Create an empty but initialized instance of a UML ElementResidence. * * an initialized UML ElementResidence instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Create an empty but initialized instance of a UML ElementResidence. * * an initialized UML ElementResidence instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */

### Response:",DESIGN. Defensive program to make sure model is not null.
448,"// FIXME: This worries me a bit, since it could allocate a lot with a large newLength",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: This worries me a bit, since it could allocate a lot with a large newLength

### Response:",DESIGN.
449,// TODO: This is well-formedness rule from UML1.4.2 // 4.5.3.20 [2] No GeneralizableElement can have a parent // Generalization to an element that is a leaf. // self.parent->forAll(s | not s.isLeaf),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This is well-formedness rule from UML1.4.2 // 4.5.3.20 [2] No GeneralizableElement can have a parent // Generalization to an element that is a leaf. // self.parent->forAll(s | not s.isLeaf)

### Response:",DESIGN.
450,"// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO should this be deprecated ? (to be efficient, internals should deal with RubyHash directly)

### Response:",DESIGN.
451,// TODO: What progressMgr is to be used here? Where does // it come from?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: What progressMgr is to be used here? Where does // it come from?

### Response:",DESIGN.
452,// TODO : this is broke for subqueries in statements other than selects...,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO : this is broke for subqueries in statements other than selects...

### Response:",DEFECT.
453,/** * The UML 1.4 model elements to test. * * TODO: This needs to be updated with a version for UML 2.x. */,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * The UML 1.4 model elements to test. * * TODO: This needs to be updated with a version for UML 2.x. */

### Response:",TEST.
454,// not used,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not used

### Response:",DESIGN.
455,// TODO: factor this chunk as in MRI/YARV GETASTER,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: factor this chunk as in MRI/YARV GETASTER

### Response:",DESIGN.
456,"// FIXME: if we terminate immediately, this appears to break while in method arguments // we need to push a nil for the cases where we will never enter the body",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: if we terminate immediately, this appears to break while in method arguments // we need to push a nil for the cases where we will never enter the body

### Response:",DEFECT.
457,// this call is side-effecty,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// this call is side-effecty

### Response:",DESIGN.
458,"// a check, just in case:",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// a check, just in case:

### Response:",DESIGN.
459,// TODO is this ever used?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO is this ever used?

### Response:",DESIGN.
460,//TODO: reenable if we also fix the above todo,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: reenable if we also fix the above todo

### Response:",DEFECT.
461,// TODO: This can be a mess... There are any better solution? ,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This can be a mess... There are any better solution?

### Response:",DESIGN.
462,// TODO : not so sure this is needed...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO : not so sure this is needed...

### Response:",DESIGN.
463,// TODO: just noticed that MySQL 5.0 supports a multi-bit BIT // column by using the getObject/setObject methods with a byte[]. // So it would be valuable at some point to make this code a bit // more dbms-specific,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: just noticed that MySQL 5.0 supports a multi-bit BIT // column by using the getObject/setObject methods with a byte[]. // So it would be valuable at some point to make this code a bit // more dbms-specific

### Response:",DESIGN.
464,// should the samples be aggregated on thread name or thread group (default) ?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// should the samples be aggregated on thread name or thread group (default) ?

### Response:",DESIGN.
465,"// TODO: should ""record"" how many properties we have reffered to - and if we // don't get'em'all we throw an exception! Way better than trial and error ;)",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: should ""record"" how many properties we have reffered to - and if we // don't get'em'all we throw an exception! Way better than trial and error ;)

### Response:",DESIGN.
466,"/** * Check if a string is a valid JMeter 'expression'. * <p> * The current implementation is very basic: it just accepts any string * containing ""${"" as a valid expression. TODO: improve, but keep returning * true for ""${}"". */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Check if a string is a valid JMeter 'expression'. * <p> * The current implementation is very basic: it just accepts any string * containing ""${"" as a valid expression. TODO: improve, but keep returning * true for ""${}"". */

### Response:",IMPLEMENTATION.
467,"// TODO: bindpropertyresults(alias, returnElem)",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: bindpropertyresults(alias, returnElem)

### Response:",IMPLEMENTATION.
468,"// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Put a placeholder in entries, so we don't recurse back and try to save() the // same object again. QUESTION: should this be done before onSave() is called? // likewise, should it be done before onUpdate()?

### Response:",DESIGN.
469,// TODO: Won't our use of PathComparator take care of uniqueness?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Won't our use of PathComparator take care of uniqueness?

### Response:",DESIGN.
470,/** * The constructor. * TODO: Why does this method not handle all settings * (KEY_DEFAULT_SHADOW_WIDTH is missing)? */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * The constructor. * TODO: Why does this method not handle all settings * (KEY_DEFAULT_SHADOW_WIDTH is missing)? */

### Response:",IMPLEMENTATION.
471,// TODO: This should only be building list up to 'index',DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This should only be building list up to 'index'

### Response:",DESIGN.
472,"// Note: Registry based authority is being removed from a // new spec for URI which would obsolete RFC 2396. If the // spec is added to XML errata, processing of reg_name // needs to be removed. - mrglavas.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Note: Registry based authority is being removed from a // new spec for URI which would obsolete RFC 2396. If the // spec is added to XML errata, processing of reg_name // needs to be removed. - mrglavas.

### Response:",DESIGN.
473,// TODO: this doesn't belong in the implementation specific piece - tfm,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: this doesn't belong in the implementation specific piece - tfm

### Response:",DESIGN.
474,"/* * fallback in case we have trouble loading the class or * don't know how to handle it (there is no easy way to * know what IDL mode would generate. * * This is supposed to make Ant always recompile the * class, as a file of that name should not exist. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * fallback in case we have trouble loading the class or * don't know how to handle it (there is no easy way to * know what IDL mode would generate. * * This is supposed to make Ant always recompile the * class, as a file of that name should not exist. */

### Response:",DESIGN.
475,// A cloned method now belongs to a new class. Set it. // TODO: Make DynamicMethod immutable,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// A cloned method now belongs to a new class. Set it. // TODO: Make DynamicMethod immutable

### Response:",DESIGN.
476,// TODO: Use reflection against the test case to ensure that it // does not import non-ArgoUML classes,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Use reflection against the test case to ensure that it // does not import non-ArgoUML classes

### Response:",DESIGN.
477,"// TODO do tests for collections of collections (8.5.13), // even though it is not yet supported // question: should this happen with all collections or only // the constructed ones?",TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO do tests for collections of collections (8.5.13), // even though it is not yet supported // question: should this happen with all collections or only // the constructed ones?

### Response:",TEST.
478,// Some LAFs don't work under Java 6 or later.,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Some LAFs don't work under Java 6 or later.

### Response:",DEFECT.
479,//use of trim() here is ugly?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//use of trim() here is ugly?

### Response:",DESIGN.
480,// end of workaround,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// end of workaround

### Response:",DESIGN.
481,// XXX is the following really necessary? it is in the same thread group...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// XXX is the following really necessary? it is in the same thread group...

### Response:",DESIGN.
482,// TODO: Do we have anything to add here?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Do we have anything to add here?

### Response:",DOCUMENTATION.
483,"// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. ",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation.

### Response:",DESIGN.
484,"// TODO: We can choose between something which matches UML 1.4 in name // or something that matches in functionality. We've chosen // functionality for now, but this will create a name conflict during // the migration process. - tfm",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We can choose between something which matches UML 1.4 in name // or something that matches in functionality. We've chosen // functionality for now, but this will create a name conflict during // the migration process. - tfm

### Response:",DEFECT.
485,// TODO: this should call the single namespace form // getStereotype(it2.next(); stereo);,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: this should call the single namespace form // getStereotype(it2.next(); stereo);

### Response:",DESIGN.
486,/* * Ensure that the sample variables are correctly initialised for each run. * TODO is this the best way to do this? should it be done elsewhere ? */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * Ensure that the sample variables are correctly initialised for each run. * TODO is this the best way to do this? should it be done elsewhere ? */

### Response:",DESIGN.
487,// TODO do we need to add a charset for the file contents? // $NON-NLS-1$,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO do we need to add a charset for the file contents? // $NON-NLS-1$

### Response:",DESIGN.
488,/* Note: this method incorrectly caches the method structure. It needs to be cleared when the classloader changes. */,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* Note: this method incorrectly caches the method structure. It needs to be cleared when the classloader changes. */

### Response:",DEFECT.
489,// todo : remove,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// todo : remove

### Response:",DESIGN.
490,"/* * Find all beans out there and check their resource property files: - Check * that non-default property files don't have any extra keys. - Check all * necessary properties are defined at least in the default property file, * except for beans whose name contains ""Experimental"" or ""Alpha"". * * TODO: - Check property files don't have duplicate keys (is this important) * */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * Find all beans out there and check their resource property files: - Check * that non-default property files don't have any extra keys. - Check all * necessary properties are defined at least in the default property file, * except for beans whose name contains ""Experimental"" or ""Alpha"". * * TODO: - Check property files don't have duplicate keys (is this important) * */

### Response:",IMPLEMENTATION.
491,// TODO: This is a temporary crutch to use until all Figs are updated // to use the constructor that accepts a DiagramSettings object,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This is a temporary crutch to use until all Figs are updated // to use the constructor that accepts a DiagramSettings object

### Response:",DESIGN.
492,// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??

### Response:",DEFECT.
493,// TODO: Count/report unresolved references,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Count/report unresolved references

### Response:",IMPLEMENTATION.
494,// Windows bug workaround in case a YES/NO confirm // was shown,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Windows bug workaround in case a YES/NO confirm // was shown

### Response:",DESIGN.
495,// TODO: This should be handled with an Iterator!!!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This should be handled with an Iterator!!!

### Response:",DESIGN. Implement a better iterator.
496,"// This is a kludge to deal with enumerators, which crash the doSwitch. //",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// This is a kludge to deal with enumerators, which crash the doSwitch. //

### Response:",DESIGN.
497,"/** * A specialist Selection class for FigPartitions. * This ensures that all swimlanes are the same length (ie height). * TODO: Make sure that all swimlanes appear side by side (UML spec * states ""separated from neighboring swimlanes by vertical solid * lines on both sides"". * TODO: Allow drag of the west and east edge to resize both the selected * Fig and the fig connected to that side. * TODO: Show NorthWest and SouthWest handle only on leftmost swimlane. * TODO: Show NorthEast and SouthEast handle only on rightmost swimlane. * Bob */",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * A specialist Selection class for FigPartitions. * This ensures that all swimlanes are the same length (ie height). * TODO: Make sure that all swimlanes appear side by side (UML spec * states ""separated from neighboring swimlanes by vertical solid * lines on both sides"". * TODO: Allow drag of the west and east edge to resize both the selected * Fig and the fig connected to that side. * TODO: Show NorthWest and SouthWest handle only on leftmost swimlane. * TODO: Show NorthEast and SouthEast handle only on rightmost swimlane. * Bob */

### Response:",IMPLEMENTATION.
498,// TODO: This can't depend on ProjectBrowser. It needs to get // the current drawing area from the Diagram subsystem or GEF,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This can't depend on ProjectBrowser. It needs to get // the current drawing area from the Diagram subsystem or GEF

### Response:",DESIGN.
499,"//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));

### Response:",DESIGN.
500,"//TODO: this is too conservative; if all preceding joins were // also inner joins, we could use an inner join here",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: this is too conservative; if all preceding joins were // also inner joins, we could use an inner join here

### Response:",DESIGN.
501,// TODO is this correct?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO is this correct?

### Response:",DESIGN.
502,// TODO: i18n,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: i18n

### Response:",IMPLEMENTATION.
503,// is it necessary to register %exact since it can only appear in a where clause?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// is it necessary to register %exact since it can only appear in a where clause?

### Response:",DESIGN.
504,// TODO: process warnings? Set Code and Message to success?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: process warnings? Set Code and Message to success?

### Response:",IMPLEMENTATION.
505,// TODO display warning dialog as this can take some time,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO display warning dialog as this can take some time

### Response:",IMPLEMENTATION.
506,"// TBD should this be varbinary($1)? // registerColumnType(Types.VARBINARY, ""binary($1)"");",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TBD should this be varbinary($1)? // registerColumnType(Types.VARBINARY, ""binary($1)"");

### Response:",DESIGN.
507,"/** * <p>Determines if the FigEdge is currently connected to the correct * FigNodes, if not the edges is the correct FigNodes set and the edge * rerouted. * <p>Typically this is used when a user has amended from the property * panel a relationship from one model element to another and the graph * needs to react to that change. * <p>e.g. if the participant of an association end is changed. * <p>Calls a helper method (layoutThisToSelf) to avoid this edge * disappearing if the new source and dest are the same node. * * TODO: This method is called far too frequently. It should only be called * when a specific event is received. It seems to be currently called whenever * any event is received from the owner. * * boolean whether or not the update was sucessful */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * <p>Determines if the FigEdge is currently connected to the correct * FigNodes, if not the edges is the correct FigNodes set and the edge * rerouted. * <p>Typically this is used when a user has amended from the property * panel a relationship from one model element to another and the graph * needs to react to that change. * <p>e.g. if the participant of an association end is changed. * <p>Calls a helper method (layoutThisToSelf) to avoid this edge * disappearing if the new source and dest are the same node. * * TODO: This method is called far too frequently. It should only be called * when a specific event is received. It seems to be currently called whenever * any event is received from the owner. * * boolean whether or not the update was sucessful */

### Response:",DESIGN.
508,/* Note: this method and resolveExpectedJavaField should be rewritten to invert this logic so that no exceptions need to be caught unecessarily. This is just a temporary impl. the field or null if not found */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* Note: this method and resolveExpectedJavaField should be rewritten to invert this logic so that no exceptions need to be caught unecessarily. This is just a temporary impl. the field or null if not found */

### Response:",DESIGN.
509,"// TODO do tests for type conformance (8.4.4), // even though it is not yet supported",TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO do tests for type conformance (8.4.4), // even though it is not yet supported

### Response:",TEST.
510,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
511,/** * Create an empty but initialized instance of a UML Class. * * an initialized UML Class instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Create an empty but initialized instance of a UML Class. * * an initialized UML Class instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */

### Response:",DESIGN. It doesn't make sense to create a new element without knowing where to * put it.
512,// TODO: decompose getJavaPackageModule so we don't parse fullName,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: decompose getJavaPackageModule so we don't parse fullName

### Response:",DESIGN.
513,//TODO possibly relax that,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO possibly relax that

### Response:",DESIGN.
514,//A hack to make user-defined variables in the testplan element more dynamic,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//A hack to make user-defined variables in the testplan element more dynamic

### Response:",DESIGN.
515,"/* * TODO: When 1.4 is the earliest version supported, add the following line: * setSurrendersFocusOnKeystroke(true); * This should help handle some problems with navigation using tab & return * to move through cells. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * TODO: When 1.4 is the earliest version supported, add the following line: * setSurrendersFocusOnKeystroke(true); * This should help handle some problems with navigation using tab & return * to move through cells. */

### Response:",IMPLEMENTATION.
516,"/* Silly bug workaround  8694. If you look at the above code, * note that we restore the saved caret position first, then * scroll to the saved location. However, the caret changing * can itself result in scrolling to a different location than * what was saved; and since moveCaretPosition() calls * updateBracketHighlight(), the bracket highlight's out of * bounds calculation will rely on a different set of physical * first/last lines than what we will end up with eventually. * Instead of confusing the user with status messages that * appear at random when switching buffers, we simply hide the * message altogether. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* Silly bug workaround  8694. If you look at the above code, * note that we restore the saved caret position first, then * scroll to the saved location. However, the caret changing * can itself result in scrolling to a different location than * what was saved; and since moveCaretPosition() calls * updateBracketHighlight(), the bracket highlight's out of * bounds calculation will rely on a different set of physical * first/last lines than what we will end up with eventually. * Instead of confusing the user with status messages that * appear at random when switching buffers, we simply hide the * message altogether. */

### Response:",DESIGN. Workaround is better than confusing status messages.
517,// TODO: This is probably an undesirable side effect unless the user // confirms it. Placing an element on a second diagram is going to // potentially change its namespace. - tfm 20061208,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This is probably an undesirable side effect unless the user // confirms it. Placing an element on a second diagram is going to // potentially change its namespace. - tfm 20061208

### Response:",DEFECT.
518,/** * Manages a ProgressMonitor dialog. * * NOTE: Users of this class should use the type of the interface * { org.argouml.taskmgmt.ProgressMonitor} wherever possible to * maintain GUI independence. * * andrea_nironi * * TODO: Bob says: I don't like the naming of this class. Its confusing that * its called ...Window and yet it is not a window. Lets rename once we have * it hidden. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Manages a ProgressMonitor dialog. * * NOTE: Users of this class should use the type of the interface * { org.argouml.taskmgmt.ProgressMonitor} wherever possible to * maintain GUI independence. * * andrea_nironi * * TODO: Bob says: I don't like the naming of this class. Its confusing that * its called ...Window and yet it is not a window. Lets rename once we have * it hidden. */

### Response:",DESIGN. See also Bob's comment above.
519,// TODO: Also check REG_ANCHORINDEX vs. anchor,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Also check REG_ANCHORINDEX vs. anchor

### Response:",IMPLEMENTATION.
520,// TODO : Redo it (curBody should be as long as curLanguage+button),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO : Redo it (curBody should be as long as curLanguage+button)

### Response:",IMPLEMENTATION.
521,"/** * Test creation of Collaboration diagrams. * TODO: Test creating on an operation. * * jaap.branderhorst * Jan 9, 2003 */",TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Test creation of Collaboration diagrams. * TODO: Test creating on an operation. * * jaap.branderhorst * Jan 9, 2003 */

### Response:",TEST.
522,"// TODO: setText in GEF should call setBounds instead of directly // changing x, y, w, h - then we will have an event generated // correctly in GEF",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: setText in GEF should call setBounds instead of directly // changing x, y, w, h - then we will have an event generated // correctly in GEF

### Response:",DESIGN.
523,"//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: when this is the entry point, we should use an INNER_JOIN for fetching the many-to-many elements!

### Response:",DESIGN.
524,// Optimization - If classOfStaticMethod is set then we have already // been here and determined that this is a static method invocation. // Note: maybe factor this out with path below... clean up.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Optimization - If classOfStaticMethod is set then we have already // been here and determined that this is a static method invocation. // Note: maybe factor this out with path below... clean up.

### Response:",DESIGN.
525,"// TODO: Temporary until we sort out a better way to do guido's fix // assertEquals(SECOND_STMT_SEP, qt2.getSQLStatementSeparator());",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Temporary until we sort out a better way to do guido's fix // assertEquals(SECOND_STMT_SEP, qt2.getSQLStatementSeparator());

### Response:",DESIGN.
526,"// work around that crazy issue where the tree contains // ""empty"" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// work around that crazy issue where the tree contains // ""empty"" FromElements (no text); afaict, this is caused // by FromElementFactory.createCollectionJoin()

### Response:",DESIGN.
527,// TODO: Put in all the property accessors,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Put in all the property accessors

### Response:",IMPLEMENTATION.
528,// TODO: catch exception if constant is already set by other // thread,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: catch exception if constant is already set by other // thread

### Response:",IMPLEMENTATION.
529,// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return

### Response:",DESIGN.
530,/* * TODO this assumes that the redirected response will always immediately follow the original response. * This may not always be true. * Is there a better way to do this? */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * TODO this assumes that the redirected response will always immediately follow the original response. * This may not always be true. * Is there a better way to do this? */

### Response:",DESIGN.
531,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
532,//TODO: ary_sort_check should be done here,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: ary_sort_check should be done here

### Response:",IMPLEMENTATION.
533,// TODO: Fix this so that new sequence diagrams are tested,TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Fix this so that new sequence diagrams are tested

### Response:",TEST.
534,"/** * An array of valid connections, the combination of connecting class and * node classes must exist as a row in this list to be considered valid. * <ul> * <li>The 1st column is the connecting element. * <li>The 2nd column is the ""from"" element type. * <li>The 3rd column is the ""to"" element type. * <li>The 3rd column is optional, if not given then it is assumed to be * the same as the ""to"" element. * <li>The existence of a 4th column indicates that the connection is valid * in one direction only. * </ul> * TODO: This encodes not only what is legal in UML, but also what ArgoUML * knows how to create, so not all legal connections are included. Probably * should be split into two pieces: 1) legal UML (here) and 2) supported (in * ArgoUML application someplace) - tfm - 20060325<p> * * Most of these are subtypes of Relationship which includes Association, * Dependency, Flow, Generalization, Extend, and Include. Dependency * includes Binding, Abstraction, Usage, and Permission. AssociationRole and * AssociationClass are Associations. The remaining items (Link, Transition, * AssociationEnd, Message) are non-Relationship types which ArgoUML treats * as connections/edges. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * An array of valid connections, the combination of connecting class and * node classes must exist as a row in this list to be considered valid. * <ul> * <li>The 1st column is the connecting element. * <li>The 2nd column is the ""from"" element type. * <li>The 3rd column is the ""to"" element type. * <li>The 3rd column is optional, if not given then it is assumed to be * the same as the ""to"" element. * <li>The existence of a 4th column indicates that the connection is valid * in one direction only. * </ul> * TODO: This encodes not only what is legal in UML, but also what ArgoUML * knows how to create, so not all legal connections are included. Probably * should be split into two pieces: 1) legal UML (here) and 2) supported (in * ArgoUML application someplace) - tfm - 20060325<p> * * Most of these are subtypes of Relationship which includes Association, * Dependency, Flow, Generalization, Extend, and Include. Dependency * includes Binding, Abstraction, Usage, and Permission. AssociationRole and * AssociationClass are Associations. The remaining items (Link, Transition, * AssociationEnd, Message) are non-Relationship types which ArgoUML treats * as connections/edges. */

### Response:",DESIGN.
535,/* * two reasons are mentioned in the API docs for File.list * (1) dir is not a directory. This is impossible as * we wouldn't get here in this case. * (2) an IO error occurred (why doesn't it throw an exception * then???) */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * two reasons are mentioned in the API docs for File.list * (1) dir is not a directory. This is impossible as * we wouldn't get here in this case. * (2) an IO error occurred (why doesn't it throw an exception * then???) */

### Response:",DEFECT.
536,//TODO ( fdietz): i18n,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO ( fdietz): i18n

### Response:",DESIGN.
537,"/** * The Fig for a permission, which is a form of dependency. * <p> * TODO: In UML 2.x, the import and access Permissions have become * PackageImports with public visibility and non-public visibility respectively. * (ArgoUML only supports the <<import>> Permission currently). The friend * Permission has been dropped. Also the type hierarchy has been reorganized so * that PackageImport is not a subtype of Dependency. * * Markus Klink */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * The Fig for a permission, which is a form of dependency. * <p> * TODO: In UML 2.x, the import and access Permissions have become * PackageImports with public visibility and non-public visibility respectively. * (ArgoUML only supports the <<import>> Permission currently). The friend * Permission has been dropped. Also the type hierarchy has been reorganized so * that PackageImport is not a subtype of Dependency. * * Markus Klink */

### Response:",DESIGN. IMPLEMENTATION.
538,// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.

### Response:",DEFECT.
539,// need to reexamine this,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// need to reexamine this

### Response:",DESIGN.
540,// SSS FIXME: // // There are also differences in variable scoping between 1.8 and 1.9 // Ruby 1.8 is the buggy semantics if I understand correctly. // // The semantics of how this shadows other variables outside the block needs // to be figured out during live var analysis.,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// SSS FIXME: // // There are also differences in variable scoping between 1.8 and 1.9 // Ruby 1.8 is the buggy semantics if I understand correctly. // // The semantics of how this shadows other variables outside the block needs // to be figured out during live var analysis.

### Response:",DESIGN.
541,"// TODO: I think we need to make sure the keys are actually cloned, // whereas the stroke instances are always immutable so they're OK",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: I think we need to make sure the keys are actually cloned, // whereas the stroke instances are always immutable so they're OK

### Response:",DESIGN.
542,// Create temporary file for output // TODO: we should be able to chain this directly to XMI reader,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Create temporary file for output // TODO: we should be able to chain this directly to XMI reader

### Response:",DESIGN. IMPLEMENTATION.
543,// defer argument checking...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// defer argument checking...

### Response:",DESIGN.
544,// FIXME: move out of this class!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: move out of this class!

### Response:",DESIGN.
545,"// the sooner ppl move to the new api, the less we'll need // crap like this",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// the sooner ppl move to the new api, the less we'll need // crap like this

### Response:",DESIGN.
546,// TODO: this assumes ranges are sorted. Is this true? - tfm,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: this assumes ranges are sorted. Is this true? - tfm

### Response:",DESIGN.
547,// TODO: check if key contains the owner ID,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: check if key contains the owner ID

### Response:",IMPLEMENTATION.
548,// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?

### Response:",DESIGN.
549,// TODO: Once the default constructor is deleted we only set dirty flag,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Once the default constructor is deleted we only set dirty flag

### Response:",DESIGN.
550,// ignore...bean doesn't get registered // TODO: Why does that bother me?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// ignore...bean doesn't get registered // TODO: Why does that bother me?

### Response:",DESIGN.
551,// REVISIT: Remove this code.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// REVISIT: Remove this code.

### Response:",DESIGN.
552,"// This is effectively the same as saver.toXML(Object, Writer) except we get to provide the DataHolder // Don't know why there is no method for this in the XStream class",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// This is effectively the same as saver.toXML(Object, Writer) except we get to provide the DataHolder // Don't know why there is no method for this in the XStream class

### Response:",DESIGN.
553,"// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found ",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found

### Response:",DESIGN.
554,// SSS FIXME: 1. Is the ordering correct? (poll before next),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// SSS FIXME: 1. Is the ordering correct? (poll before next)

### Response:",DESIGN.
555,"// TODO: Add ""unnamed"" or ""new"" or something? (Localized, of course)",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Add ""unnamed"" or ""new"" or something? (Localized, of course)

### Response:",IMPLEMENTATION.
556,"// TODO: This works for 90 degree angles, but is suboptimal // for other angles. It should reflect the angle, rather // than just using a negative offset along the same vector",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This works for 90 degree angles, but is suboptimal // for other angles. It should reflect the angle, rather // than just using a negative offset along the same vector

### Response:",DESIGN.
557,//note there is a wierd implementation in the client side,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//note there is a wierd implementation in the client side

### Response:",DESIGN. Implementation.
558,// TODO: rescan code range ?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: rescan code range ?

### Response:",DESIGN.
559,// can happen because of the multiple ways Cache.remove() // can be invoked :(,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// can happen because of the multiple ways Cache.remove() // can be invoked :(

### Response:",DESIGN.
560,//avoid error in ant task tests (good way?),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//avoid error in ant task tests (good way?)

### Response:",DESIGN.
561,// report error if something weird happens...this is diagnostic.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// report error if something weird happens...this is diagnostic.

### Response:",DESIGN.
562,// SSS FIXME: What happens to the add class in this case??,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// SSS FIXME: What happens to the add class in this case??

### Response:",DESIGN.
563,// Does not appear to be used,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Does not appear to be used

### Response:",DESIGN.
564,"// Facade methods for IMessageHandler. We don't want to allow code to // directly access an internal IMessageHandler, now that the IMessageHandler // interface requires an ExceptionFormatter to be injected for methods that // accept Exceptions.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Facade methods for IMessageHandler. We don't want to allow code to // directly access an internal IMessageHandler, now that the IMessageHandler // interface requires an ExceptionFormatter to be injected for methods that // accept Exceptions.

### Response:",DESIGN.
565,// TODO ( fdietz): i18n,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO ( fdietz): i18n

### Response:",DESIGN.
566,//TODO: get SQL rendering out of this package!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: get SQL rendering out of this package!

### Response:",DESIGN.
567,// TODO: Can we get this from the metamodel? //$NON-NLS-1$,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Can we get this from the metamodel? //$NON-NLS-1$

### Response:",DESIGN. I don't think we can get this from the metamodel.
568,/** * Create an empty but initialized instance of an Artifact * * UML 1.4 * an initialized Artifact instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Create an empty but initialized instance of an Artifact * * UML 1.4 * an initialized Artifact instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */

### Response:",DESIGN. It needs an extra parameter to specify the model/extent where * the new element should be created.
569,// I don't know if we should be run this deferred // because we might have to give the editor a chance to process the viewer update events // and hence to update the views first. // //,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// I don't know if we should be run this deferred // because we might have to give the editor a chance to process the viewer update events // and hence to update the views first. // //

### Response:",DESIGN.
570,// defer argument checking...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// defer argument checking...

### Response:",DESIGN.
571,// TODO: Cyclic dependency between PersistanceManager and here,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Cyclic dependency between PersistanceManager and here

### Response:",DESIGN.
572,// TODO: People extending GzipWriter/reader will break. Find better way here.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: People extending GzipWriter/reader will break. Find better way here.

### Response:",DESIGN.
573,"//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//aliasRefNode.resolve( false, false, aliasRefNode.getText() ); //TODO: is it kosher to do it here? //TODO: is it kosher to do it here?

### Response:",DESIGN.
574,// HACK,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// HACK

### Response:",DESIGN.
575,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
576,/** * Handle firing a diagram appearance event. * <p> * TODO: This needs to be managed on a per-diagram or per-project basis. * * event The event to be fired. * listener The listener. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Handle firing a diagram appearance event. * <p> * TODO: This needs to be managed on a per-diagram or per-project basis. * * event The event to be fired. * listener The listener. */

### Response:",DESIGN.
577,"// TODO: The following handling of multiselection is just a local // solution for the fill color, better find a more general solution: // (I don't know if it's undoable this way - thn)",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: The following handling of multiselection is just a local // solution for the fill color, better find a more general solution: // (I don't know if it's undoable this way - thn)

### Response:",DESIGN.
578,"// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// from the collection of associations, locate OJA for the // ManyToOne corresponding to this persister to fully // define the many-to-many; we need that OJA so that we can // use its alias here // TODO : is there a better way here?

### Response:",DESIGN.
579,// FIXME: don't use RubyIO for this,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: don't use RubyIO for this

### Response:",IMPLEMENTATION.
580,// TODO REMOVE THIS BOGUS EMPTY LINE,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO REMOVE THIS BOGUS EMPTY LINE

### Response:",DESIGN.
581,// should the samples be aggregated on thread name or thread group (default) ?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// should the samples be aggregated on thread name or thread group (default) ?

### Response:",DESIGN.
582,//yuck!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//yuck!

### Response:",DESIGN.
583,/** * This keeps track of the editing domain that is used to track all changes * to the model. * <p> * TODO: This probably needs to be a set of EditingDomain so that we can * manage an EditingDomain per project. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * This keeps track of the editing domain that is used to track all changes * to the model. * <p> * TODO: This probably needs to be a set of EditingDomain so that we can * manage an EditingDomain per project. */

### Response:",DESIGN.
584,// TODO: we should be given an Undo manager to use rather than looking // for a global one,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: we should be given an Undo manager to use rather than looking // for a global one

### Response:",DESIGN.
585,/** * TODO: Document! What does this do? Interacts with event pump in some manner * * objects new objeccts */,DOCUMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: Document! What does this do? Interacts with event pump in some manner * * objects new objeccts */

### Response:",DOCUMENTATION.
586,// Object to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can // remove this hack too.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Object to_a is obsolete. We match Ruby's hack until to_a goes away. Then we can // remove this hack too.

### Response:",DESIGN.
587,"/* Note: We will ll move this behavior out to a subclass of NameSpace, but we'll start here. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* Note: We will ll move this behavior out to a subclass of NameSpace, but we'll start here. */

### Response:",DESIGN.
588,// TODO: Check whether this is really needed. I think it's // left over from an incomplete understanding of the MagicDraw // composition error problem - tfm,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Check whether this is really needed. I think it's // left over from an incomplete understanding of the MagicDraw // composition error problem - tfm

### Response:",DESIGN.
589,// TODO: Do we need this one. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Do we need this one. */

### Response:",DESIGN.
590,// TODO: is this the correct default?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: is this the correct default?

### Response:",DESIGN.
591,/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a * slightly higer level in the stack (to get all the information we need) * Right now HbmBinder does not support the */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: joinKeyColumnName & foreignKeyColumnName should be called either here or at a * slightly higer level in the stack (to get all the information we need) * Right now HbmBinder does not support the */

### Response:",DESIGN.
592,"// Walk up the scope tree right now as much as possible, to avoid run-time walking // SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Walk up the scope tree right now as much as possible, to avoid run-time walking // SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution? What might break?

### Response:",DEFECT.
593,/** * TODO: Copied from UmlDiagramRenderer. * * Get the FigNode from the given layer that represents the given * model element. * The FigNode portion of an association class is returned in preference * to the FigEdge portion. * If no FigNode is found then a FIgEdge is searched for and the FigNode * that acts as its edge port is returned. * lay the layer containing the Fig * modelElement the model element to find presentation for * the FigNode presentation of the model element */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: Copied from UmlDiagramRenderer. * * Get the FigNode from the given layer that represents the given * model element. * The FigNode portion of an association class is returned in preference * to the FigEdge portion. * If no FigNode is found then a FIgEdge is searched for and the FigNode * that acts as its edge port is returned. * lay the layer containing the Fig * modelElement the model element to find presentation for * the FigNode presentation of the model element */

### Response:",DESIGN.
594,// TODO ( fdietz): move this to AbstractMessageFolder constructor // create filterlist datastructure,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO ( fdietz): move this to AbstractMessageFolder constructor // create filterlist datastructure

### Response:",DESIGN.
595,// TODO: All super constructors should take a GraphModel,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: All super constructors should take a GraphModel

### Response:",DESIGN.
596,"// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search

### Response:",DESIGN.
597,"// XXX: This check previously used callMethod(""=="") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// XXX: This check previously used callMethod(""=="") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.

### Response:",DESIGN.
598,"//?? Best guess: read object? //?? This is probably the wrong thing to do here, but //?? I don't know what else to try.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//?? Best guess: read object? //?? This is probably the wrong thing to do here, but //?? I don't know what else to try.

### Response:",DESIGN.
599,// TODO ( karlpeder): Implementation of undo/redo missing,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO ( karlpeder): Implementation of undo/redo missing

### Response:",IMPLEMENTATION.
600,// Some dbs (like McKoi) make -1 the default for scale. Apply the // same hack as above.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Some dbs (like McKoi) make -1 the default for scale. Apply the // same hack as above.

### Response:",DESIGN.
601,/** * StylePanel class which provides additional parameters for changing Text * elements provided by GEF. * TODO: i18n */,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * StylePanel class which provides additional parameters for changing Text * elements provided by GEF. * TODO: i18n */

### Response:",IMPLEMENTATION.
602,// TODO: No test coverage for this or createPropPanel? - tfm,TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: No test coverage for this or createPropPanel? - tfm

### Response:",TEST.
603,/* TODO: This is using internal knowledge of GEF. It should * handle this itself. - tfm * MVW: Move into something like Main.initGEF() */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: This is using internal knowledge of GEF. It should * handle this itself. - tfm * MVW: Move into something like Main.initGEF() */

### Response:",DESIGN.
604,// FIXME: what if value is null on next line?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: what if value is null on next line?

### Response:",DEFECT.
605,// this should be moved to a ui action.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// this should be moved to a ui action.

### Response:",DESIGN.
606,"// optional args, so we have IRubyObject[] // TODO: confirm",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// optional args, so we have IRubyObject[] // TODO: confirm

### Response:",DESIGN.
607,"// using IOOutputStream may not be the most performance way, but it's easy.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// using IOOutputStream may not be the most performance way, but it's easy.

### Response:",DESIGN.
608,// The following constants capture pre-known static call sites -- JRuby implementations of methods of ruby classes // SSS FIXME: Note that compiler/impl/BaseBodyCompiler is using op_match2 for match() and and op_match for match2 ... Is this a bug there?,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// The following constants capture pre-known static call sites -- JRuby implementations of methods of ruby classes // SSS FIXME: Note that compiler/impl/BaseBodyCompiler is using op_match2 for match() and and op_match for match2 ... Is this a bug there?

### Response:",DEFECT.
609,// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO : this really needs to be delayed unitl after we definitively know the operand node type; // where this is currently a problem is parameters for which where we cannot unequivocally // resolve an expected type

### Response:",DESIGN.
610,/* TODO: Enhance the isValidNamespace function so * that this never happens. */,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: Enhance the isValidNamespace function so * that this never happens. */

### Response:",DESIGN.
611,/** * Create an empty but initialized instance of a UML Node. * * an initialized UML Node instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Create an empty but initialized instance of a UML Node. * * an initialized UML Node instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */

### Response:",DESIGN. It doesn't make sense to create a new element without knowing where to * put it.
612,/** * The file persister for the UML model. * TODO: This is empty. What is its purpose? - tfm * Bob Tarling */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * The file persister for the UML model. * TODO: This is empty. What is its purpose? - tfm * Bob Tarling */

### Response:",DESIGN. It is not clear what this is for.
613,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
614,"/** * TODO: Use the following function to have a dropdown set of tools: * ToolBarFactory.addItemsToToolBar(buttonPanel, actions, true); * Instead, this temporary solution: * * buttonPanel the toolbar * actions an array of actions representing the tool layout */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: Use the following function to have a dropdown set of tools: * ToolBarFactory.addItemsToToolBar(buttonPanel, actions, true); * Instead, this temporary solution: * * buttonPanel the toolbar * actions an array of actions representing the tool layout */

### Response:",DESIGN.
615,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
616,// TODO: consider inherited attributes?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: consider inherited attributes?

### Response:",DESIGN.
617,//TODO: should fire its own event and ProjectBrowser //TODO: should register a listener,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: should fire its own event and ProjectBrowser //TODO: should register a listener

### Response:",DESIGN.
618,// Programming error: bail out.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Programming error: bail out.

### Response:",DESIGN. Defensive programming.
619,"// If we weren't given a system ID, attempt to use the URL for the // JAR that we were loaded from. (Why? - tfm)",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// If we weren't given a system ID, attempt to use the URL for the // JAR that we were loaded from. (Why? - tfm)

### Response:",DESIGN.
620,"// TODO: it might be a good idea to keep a reference to the color // specified in setPaint() or setColor(), rather than creating a // new object every time getPaint() is called.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: it might be a good idea to keep a reference to the color // specified in setPaint() or setColor(), rather than creating a // new object every time getPaint() is called.

### Response:",DESIGN.
621,// TODO: does not work for EntityMode.DOM4J yet!,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: does not work for EntityMode.DOM4J yet!

### Response:",DEFECT.
622,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
623,// TODO: There is a cyclic dependency between SelectionRerouteEdge // and FigEdgeModelElement,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: There is a cyclic dependency between SelectionRerouteEdge // and FigEdgeModelElement

### Response:",DESIGN.
624,/** * Gets font name. If it doesn't exist in configuration it creates new * entries in configuration for appearance. * * TODO: Why create in a getter? * * the name of the configured font */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Gets font name. If it doesn't exist in configuration it creates new * entries in configuration for appearance. * * TODO: Why create in a getter? * * the name of the configured font */

### Response:",DESIGN.
625,"// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well? If so, our property reference is // being further de-referenced... // 2) is this a DML statement // 3) we were asked to generate any needed joins (generateJoins==true) *OR* // we are currently processing a select or from clause // (an additional check is the REGRESSION_STYLE_JOIN_SUPPRESSION check solely intended for the test suite) // // The REGRESSION_STYLE_JOIN_SUPPRESSION is an additional check // intended solely for use within the test suite. This forces the // implicit join resolution to behave more like the classic parser. // The underlying issue is that classic translator is simply wrong // about its decisions on whether or not to render an implicit join // into a physical SQL join in a lot of cases. The piece it generally // tends to miss is that INNER joins effect the results by further // restricting the data set! A particular manifestation of this is // the fact that the classic translator will skip the physical join // for ToOne implicit joins *if the query is shallow*; the result // being that Query.list() and Query.iterate() could return // different number of results!",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// three general cases we check here as to whether to render a physical SQL join: // 1) is our parent a DotNode as well? If so, our property reference is // being further de-referenced... // 2) is this a DML statement // 3) we were asked to generate any needed joins (generateJoins==true) *OR* // we are currently processing a select or from clause // (an additional check is the REGRESSION_STYLE_JOIN_SUPPRESSION check solely intended for the test suite) // // The REGRESSION_STYLE_JOIN_SUPPRESSION is an additional check // intended solely for use within the test suite. This forces the // implicit join resolution to behave more like the classic parser. // The underlying issue is that classic translator is simply wrong // about its decisions on whether or not to render an implicit join // into a physical SQL join in a lot of cases. The piece it generally // tends to miss is that INNER joins effect the results by further // restricting the data set! A particular manifestation of this is // the fact that the classic translator will skip the physical join // for ToOne implicit joins *if the query is shallow*; the result // being that Query.list() and Query.iterate() could return // different number of results!

### Response:",DEFECT.
626,// TODO: The following is MDR specific. We need something generic // to all Model subsystems - tfm 20070716,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: The following is MDR specific. We need something generic // to all Model subsystems - tfm 20070716

### Response:",DESIGN. MDR specific.
627,"// TODO: We can't have a global ""current"" language // NotationProviderFactory2.setCurrentLanguage(oldLanguage);",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We can't have a global ""current"" language // NotationProviderFactory2.setCurrentLanguage(oldLanguage);

### Response:",DESIGN.
628,//TODO: implement this method properly,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: implement this method properly

### Response:",DESIGN. Implement this method properly.
629,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
630,// TODO: It would be better here to continue the loop and try to // build the rest of the compartment. Hence try/catch should be // internal to the loop.,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: It would be better here to continue the loop and try to // build the rest of the compartment. Hence try/catch should be // internal to the loop.

### Response:",DESIGN.
631,// TODO: Review - priority of public ID vs system ID has been reversed // from original implementation,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Review - priority of public ID vs system ID has been reversed // from original implementation

### Response:",DESIGN.
632,"// TODO: fix layout to look good, even if there's not enough information provided",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: fix layout to look good, even if there's not enough information provided

### Response:",DESIGN.
633,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
634,// TODO: Can we move this knowledge behind model facade rather than have a condition here?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Can we move this knowledge behind model facade rather than have a condition here?

### Response:",DESIGN.
635,"/** * This class represents a Pool of Swimlanes for Activity diagrams. This is * exists only to act as the GEF style encloser. Other nodes in the same * must be placed entirely within or outside the boundaries of this Fig * but cannot intersect with the boundary. <p> * TODO: There is no actual model element being represented here so we are * inheriting a lot of behaviour from FigNodeModelElement that we don't want. * We require to split FigNodeModelElement to separate the code that requires * a model element owner. See issue ... <p> * Remark mvw: Why not give it an owner instead? The ActivityGraph * is the obvious candidate, or maybe the top state. * * mkl */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * This class represents a Pool of Swimlanes for Activity diagrams. This is * exists only to act as the GEF style encloser. Other nodes in the same * must be placed entirely within or outside the boundaries of this Fig * but cannot intersect with the boundary. <p> * TODO: There is no actual model element being represented here so we are * inheriting a lot of behaviour from FigNodeModelElement that we don't want. * We require to split FigNodeModelElement to separate the code that requires * a model element owner. See issue ... <p> * Remark mvw: Why not give it an owner instead? The ActivityGraph * is the obvious candidate, or maybe the top state. * * mkl */

### Response:",DESIGN.
636,//TODO: make the explorer listen to project member property //changes... to eliminate coupling on gui.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: make the explorer listen to project member property //changes... to eliminate coupling on gui.

### Response:",DESIGN.
637,// TODO should this be JTLSAVER? Only seems to be called by MonitorHealthVisualzer,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO should this be JTLSAVER? Only seems to be called by MonitorHealthVisualzer

### Response:",DESIGN.
638,/** * A ChangeCommand that updates its label. * <p> * The label of this command can contain the character ' ' that will be replaced * with information about an object when the label is returned. * <p> * TODO: Switch this to use Java string formatting instead of private   notation? * * Bogdan Pistol */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * A ChangeCommand that updates its label. * <p> * The label of this command can contain the character ' ' that will be replaced * with information about an object when the label is returned. * <p> * TODO: Switch this to use Java string formatting instead of private   notation? * * Bogdan Pistol */

### Response:",DESIGN. Implement this using Java string formatting.
639,//TODO ( fdietz): i18n,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO ( fdietz): i18n

### Response:",DESIGN.
640,// TODO: Once we're happy that JFCUtilities is no longer required,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Once we're happy that JFCUtilities is no longer required

### Response:",DESIGN.
641,// TODO: This is well-formedness rule from UML1.4.2 // 4.5.3.20 [1] A root cannot have any Generalizations. // self.isRoot implies self.generalization->isEmpty,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This is well-formedness rule from UML1.4.2 // 4.5.3.20 [1] A root cannot have any Generalizations. // self.isRoot implies self.generalization->isEmpty

### Response:",DESIGN.
642,"// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: Big fat hack here, because scope names are expected to be interned strings by the parser

### Response:",DESIGN. Hacky.
643,"// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.

### Response:",DESIGN.
644,"/** * TODO: For UML 2.x, powertypes are accessed indirectly through the * GeneralizationSets that contain a Generalization. * * Nov 3, 2002 * jaap.branderhorst */",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: For UML 2.x, powertypes are accessed indirectly through the * GeneralizationSets that contain a Generalization. * * Nov 3, 2002 * jaap.branderhorst */

### Response:",DESIGN.
645,// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode

### Response:",DESIGN.
646,/** * Create a notation settings value object with all default values. * <p> * TODO: This class only has partial Undo support (basically just those * members that had it as part of a previous implementation). */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Create a notation settings value object with all default values. * <p> * TODO: This class only has partial Undo support (basically just those * members that had it as part of a previous implementation). */

### Response:",IMPLEMENTATION.
647,"// TODO: replace all this url2 mess with a proper method // ""areEquivalent(url1, url2)"" that // would also ignore case in protocol and host names, etc. -- use that // method in the CookieManager too.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: replace all this url2 mess with a proper method // ""areEquivalent(url1, url2)"" that // would also ignore case in protocol and host names, etc. -- use that // method in the CookieManager too.

### Response:",DESIGN.
648,// todo : YUCK!!!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// todo : YUCK!!!

### Response:",DESIGN.
649,"// FIXME: This needs to happen for lambdas // args.checkArgCount(runtime, parameters.length);",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: This needs to happen for lambdas // args.checkArgCount(runtime, parameters.length);

### Response:",IMPLEMENTATION.
650,"/** * Execute this action from the command line. * * TODO: The underlying GEF library relies on Acme that doesn't allow * us to create these files unless there is a window showing. For this * reason I have had to split the performing of commands in * { org.argouml.application.Main main(String[])} so that we can, * by not supplying the -batch option, run these commands * with the window showing. Hopefully this can eventually be fixed. * * org.argouml.application.api.CommandLineInterface doCommand(String) * argument is the file name that we save to. * true if it is OK. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Execute this action from the command line. * * TODO: The underlying GEF library relies on Acme that doesn't allow * us to create these files unless there is a window showing. For this * reason I have had to split the performing of commands in * { org.argouml.application.Main main(String[])} so that we can, * by not supplying the -batch option, run these commands * with the window showing. Hopefully this can eventually be fixed. * * org.argouml.application.api.CommandLineInterface doCommand(String) * argument is the file name that we save to. * true if it is OK. */

### Response:",DEFECT.
651,// TODO: We need the project specific diagram settings here,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We need the project specific diagram settings here

### Response:",IMPLEMENTATION.
652,"//TODO: implement functionality // this might be painful to do here, as the ""join post processing"" for // the subquery has already been performed (meaning that for // theta-join dialects, the join conditions have already been moved // over to the where clause). A ""simple"" solution here might to // perform ""join post processing"" once for the entire query (including // any subqueries) at one fell swoop",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: implement functionality // this might be painful to do here, as the ""join post processing"" for // the subquery has already been performed (meaning that for // theta-join dialects, the join conditions have already been moved // over to the where clause). A ""simple"" solution here might to // perform ""join post processing"" once for the entire query (including // any subqueries) at one fell swoop

### Response:",DESIGN.
653,"// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415

### Response:",DESIGN.
654,// Look for a default invoke() handler method in the namespace // Note: this code duplicates that in NameSpace getCommand() // is that ok?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Look for a default invoke() handler method in the namespace // Note: this code duplicates that in NameSpace getCommand() // is that ok?

### Response:",DESIGN.
655,// should implement getMinimumLength() -- any ideas?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// should implement getMinimumLength() -- any ideas?

### Response:",DESIGN.
656,"// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.

### Response:",DESIGN.
657,// defer argument checking,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// defer argument checking

### Response:",DESIGN.
658,//TODO: switch statements are always evil! We already had bugs because // of forgotten token types. Use polymorphism for this!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: switch statements are always evil! We already had bugs because // of forgotten token types. Use polymorphism for this!

### Response:",DESIGN. Evil switch statements are always a design smell.
659,// this is where checked exceptions piss me off. this method only uses // a StringReader which can never throw an exception...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// this is where checked exceptions piss me off. this method only uses // a StringReader which can never throw an exception...

### Response:",DESIGN.
660,// TODO: I18N,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: I18N

### Response:",IMPLEMENTATION.
661,// FIXME: Remove this from grammars.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: Remove this from grammars.

### Response:",DESIGN.
662,// TODO: Placeholder implementation until support for tracking on // a per-project basis is implemented,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Placeholder implementation until support for tracking on // a per-project basis is implemented

### Response:",IMPLEMENTATION.
663,// TODO: Bob says - Coding by use of side effect here. // Maybe this should be done in a clearer way but it fixes // // It seems that when loading an XMI that is not contained in a zip // file then the InputStream given as the argument to this method // can't be reused as it is at the end of the stream. In that case // systemId appears to be none-null at this stage. // So if systemId is not null we recreate the InputSource.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Bob says - Coding by use of side effect here. // Maybe this should be done in a clearer way but it fixes // // It seems that when loading an XMI that is not contained in a zip // file then the InputStream given as the argument to this method // can't be reused as it is at the end of the stream. In that case // systemId appears to be none-null at this stage. // So if systemId is not null we recreate the InputSource.

### Response:",DESIGN.
664,"// TODO: the above works in the current situation, but it's // just a hack. How to get each editor to report whether it // wants to grow bigger? Whether the property label should // be at the left or at the top of the editor? ...?",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: the above works in the current situation, but it's // just a hack. How to get each editor to report whether it // wants to grow bigger? Whether the property label should // be at the left or at the top of the editor? ...?

### Response:",DESIGN.
665,"// Apparently, this method is never called.",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Apparently, this method is never called.

### Response:",IMPLEMENTATION.
666,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
667,// TODO: is this right???,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: is this right???

### Response:",DESIGN.
668,// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Does this dialect support the Oracle-style FOR UPDATE NOWAIT syntax?

### Response:",DESIGN. The dialect implementation must provide a method // that takes a SQLForUpdateNowaitNode and returns a SQLNode.
669,// TODO: Ruby re-checks that the buffer string hasn't been modified,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Ruby re-checks that the buffer string hasn't been modified

### Response:",IMPLEMENTATION.
670,/** * TODO: this class should be moved to package * org.argouml.uml.ui.behavior.common_behavior. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: this class should be moved to package * org.argouml.uml.ui.behavior.common_behavior. */

### Response:",DESIGN.
671,//TODO: How about FigAssociationClass?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: How about FigAssociationClass?

### Response:",DESIGN.
672,// Not used,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Not used

### Response:",DESIGN.
673,// defer argument checking,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// defer argument checking

### Response:",DESIGN.
674,//XXX // All this to convert source to destination directory according // to weblogic standards Can be written better... this is too hacky!,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//XXX // All this to convert source to destination directory according // to weblogic standards Can be written better... this is too hacky!

### Response:",DESIGN.
675,// first determine the size of the chart rendering area... // TODO workout insets for SWT,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// first determine the size of the chart rendering area... // TODO workout insets for SWT

### Response:",DESIGN.
676,"// No appropriate DataType for this column, so do the best // we can with what we know. // // THIS MAY NOT BE THE BEST BEHAVIOR HERE!!!!!!!",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// No appropriate DataType for this column, so do the best // we can with what we know. // // THIS MAY NOT BE THE BEST BEHAVIOR HERE!!!!!!!

### Response:",DESIGN.
677,"// TO DO: these annotations only work with XYPlot, see if it is possible to // make ContourPlot a subclass of XYPlot (DG);",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TO DO: these annotations only work with XYPlot, see if it is possible to // make ContourPlot a subclass of XYPlot (DG);

### Response:",DESIGN.
678,// For backward compatibility everything is above and right // TODO: Do in polar domain?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// For backward compatibility everything is above and right // TODO: Do in polar domain?

### Response:",DESIGN.
679,// FIXME -- This will most likely not work. // You want the element removed if the contents are the same // Not just if the element reference is the same.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME -- This will most likely not work. // You want the element removed if the contents are the same // Not just if the element reference is the same.

### Response:",DEFECT.
680,// TODO: We need a specific exception type here.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We need a specific exception type here.

### Response:",DESIGN.
681,"// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C // ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! // private int _lexicalNestingLevel;",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// SSS FIXME: Maybe this is not really a concern after all ... // Nesting level of this scope in the lexical nesting of scopes in the current file -- this is not to be confused // with semantic nesting of scopes across files. // // Consider this code in a file f // class M1::M2::M3::C // ... // end // // So, C is at lexical nesting level of 1 (the file script is at 0) in the file 'f' // Semantically it is at level 3 (M1, M2, M3 are at 0,1,2). // // This is primarily used to ensure that variable names don't clash! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! // private int _lexicalNestingLevel;

### Response:",DESIGN.
682,//TODO: What can we do with other kind of actions?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: What can we do with other kind of actions?

### Response:",DESIGN. I'm not sure what other kind of actions there could be.
683,"// The following is specifically for Realizations // TODO: correction in GEF, it should use InterfaceRealization, not Abstraction",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// The following is specifically for Realizations // TODO: correction in GEF, it should use InterfaceRealization, not Abstraction

### Response:",DESIGN.
684,"// TODO - removes the nodes from the CheckDirty map - should it be done later, in case some can't be removed?",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO - removes the nodes from the CheckDirty map - should it be done later, in case some can't be removed?

### Response:",DESIGN.
685,// TODO: Moved this out of the implementation-specific piece - tfm // everything is primary for now (ie not reverse engineered),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Moved this out of the implementation-specific piece - tfm // everything is primary for now (ie not reverse engineered)

### Response:",DESIGN.
686,// TODO: Hook this creating of a new resource in to someplace more // more appropriate (perhaps createModel() ?) // Better yet add a new method to Model API to create a new top level // project/model/xmi file so we don't depend on side effects,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Hook this creating of a new resource in to someplace more // more appropriate (perhaps createModel() ?) // Better yet add a new method to Model API to create a new top level // project/model/xmi file so we don't depend on side effects

### Response:",DESIGN.
687,// TODO: We have some quirk that the a baseClass addition or // removal from a steroetype comes back as an AttributeChangeEvent // rather than an AssociationChangeEvent. This needs further // investigation to see if this can be made consistent.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We have some quirk that the a baseClass addition or // removal from a steroetype comes back as an AttributeChangeEvent // rather than an AssociationChangeEvent. This needs further // investigation to see if this can be made consistent.

### Response:",DESIGN.
688,// TODO - should check that error has been logged...,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO - should check that error has been logged...

### Response:",IMPLEMENTATION.
689,// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// NOTE VERY HACKISH WORKAROUND!! // TODO: Fix this so it will work for non-POJO entity mode

### Response:",DESIGN. Hackish workaround.
690,// TODO - improve this check,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO - improve this check

### Response:",DESIGN. Improve the check.
691,// TODO: find a way to avoid the cost of creating a String here -- // probably a new PatternMatcherInput working on a byte[] would do // better.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: find a way to avoid the cost of creating a String here -- // probably a new PatternMatcherInput working on a byte[] would do // better.

### Response:",DESIGN.
692,// TODO: rescan code range ?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: rescan code range ?

### Response:",DESIGN.
693,/* Work around some UTC and Daylight saving offsets */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* Work around some UTC and Daylight saving offsets */

### Response:",DESIGN.
694,// defer argument checking...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// defer argument checking...

### Response:",DESIGN.
695,"//TODO: assertion only, could be optimized away",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: assertion only, could be optimized away

### Response:",DESIGN.
696,/* TODO: This try-catch will be needed * once the code below is improved. */,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: This try-catch will be needed * once the code below is improved. */

### Response:",DESIGN. Improve the code below.
697,"// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)

### Response:",DESIGN.
698,// TODO: what shall we do with the exception?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: what shall we do with the exception?

### Response:",IMPLEMENTATION.
699,// TODO: check for ascii string,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: check for ascii string

### Response:",IMPLEMENTATION.
700,"// TODO: Need to enhance the index dialog to allow specifying storage option. For now just accept the // default for the index access method. // valuesMap.put(""indexType"", ""USING BTREE"");",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Need to enhance the index dialog to allow specifying storage option. For now just accept the // default for the index access method. // valuesMap.put(""indexType"", ""USING BTREE"");

### Response:",IMPLEMENTATION.
701,// TODO: This should be built by reflection from the metamodel - tfm // Update for UML 2.x metamodel if not replaced by reflection,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This should be built by reflection from the metamodel - tfm // Update for UML 2.x metamodel if not replaced by reflection

### Response:",DESIGN. IMPLEMENTATION.
702,//TO DO : delete the file if it is not a valid file.,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TO DO : delete the file if it is not a valid file.

### Response:",DESIGN.
703,"// FIXME ( fdietz): Do we need this implementation in a TempFolder? // If not, just put an empty method here, just like in VirtualFolder.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME ( fdietz): Do we need this implementation in a TempFolder? // If not, just put an empty method here, just like in VirtualFolder.

### Response:",DESIGN.
704,"// RDMS does not directly support the trim() function, we use rtrim() and ltrim()",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// RDMS does not directly support the trim() function, we use rtrim() and ltrim()

### Response:",DESIGN. Implementing trim() using rtrim() and ltrim().
705,"/* TODO: Some parts of ArgoUML have preliminary support for multiple * details panels, but we currently only support * the default South (bottom) panel */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: Some parts of ArgoUML have preliminary support for multiple * details panels, but we currently only support * the default South (bottom) panel */

### Response:",DESIGN. IMPLEMENTATION. DEFECT.
706,/* * TODO: Delete this class - unused */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * TODO: Delete this class - unused */

### Response:",DESIGN. Delete this class - unused.
707,// how to handle empty target lists? // probably the wizstep should only show an empty pane in that case,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// how to handle empty target lists? // probably the wizstep should only show an empty pane in that case

### Response:",DESIGN.
708,// TODO: not complete,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: not complete

### Response:",DESIGN.
709,// TODO: Once we have fixed all subclasses the title will // always be localized so this localization can be removed.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Once we have fixed all subclasses the title will // always be localized so this localization can be removed.

### Response:",DESIGN.
710,"// while its broken to have a null // symlinkPath, some older plugins // might...",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// while its broken to have a null // symlinkPath, some older plugins // might...

### Response:",DEFECT.
711,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
712,// fucking GTK look and feel,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// fucking GTK look and feel

### Response:",DESIGN.
713,// Note: It would be nice to pre-calculate this per series,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Note: It would be nice to pre-calculate this per series

### Response:",DESIGN.
714,"// TODO: figure out how to get then name of the table that the trigger // is on. //""and tables.name = ? "" +",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: figure out how to get then name of the table that the trigger // is on. //""and tables.name = ? "" +

### Response:",DESIGN.
715,"// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415

### Response:",DESIGN.
716,//polymorphism comment above,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//polymorphism comment above

### Response:",DESIGN.
717,// TODO: must override in RubyModule to pick up constants,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: must override in RubyModule to pick up constants

### Response:",IMPLEMENTATION.
718,// TODO should level be more than debug ?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO should level be more than debug ?

### Response:",DESIGN.
719,// TODO this is not populated currently,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO this is not populated currently

### Response:",IMPLEMENTATION.
720,// note: at least my local MySQL 5.1 install shows this not working...,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// note: at least my local MySQL 5.1 install shows this not working...

### Response:",DEFECT.
721,// TODO: should define a CompoundCritic,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: should define a CompoundCritic

### Response:",DESIGN.
722,"// TODO: subclass these hibernate dialects to provide the ""canPasteTo"" // api method in HibernateDialect interface. //private static final DB2390Dialect db2390Dialect = new DB2390Dialect();",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: subclass these hibernate dialects to provide the ""canPasteTo"" // api method in HibernateDialect interface. //private static final DB2390Dialect db2390Dialect = new DB2390Dialect();

### Response:",DESIGN.
723,// TODO: rotate the image when drawn with horizontal orientation?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: rotate the image when drawn with horizontal orientation?

### Response:",DESIGN.
724,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
725,// MRI 1.8 behavior: this combination of flags is not allowed,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// MRI 1.8 behavior: this combination of flags is not allowed

### Response:","DESIGN. I don't like it, but it's the right thing to do."
726,"// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// There's not a compelling reason to keep JavaClass instances in a weak map // (any proxies created are [were] kept in a non-weak map, so in most cases they will // stick around anyway), and some good reasons not to (JavaClass creation is // expensive, for one; many lookups are performed when passing parameters to/from // methods; etc.). // TODO: faster custom concurrent map

### Response:",DESIGN.
727,// TODO : temporary initial step towards HHH-1907,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO : temporary initial step towards HHH-1907

### Response:",DESIGN.
728,// TODO: We need a factory pattern for GoXXX classes that can determine if they are required,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We need a factory pattern for GoXXX classes that can determine if they are required

### Response:",DESIGN.
729,// TODO: Figure out how this can happen and possibly remove,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Figure out how this can happen and possibly remove

### Response:",DESIGN.
730,// Perhaps something like the following would work instead // Rectangle drawingArea = // Globals.curEditor().getJComponent().getVisibleRect();,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Perhaps something like the following would work instead // Rectangle drawingArea = // Globals.curEditor().getJComponent().getVisibleRect();

### Response:",DESIGN. Alternate method.
731,// TODO: create the child index ST,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: create the child index ST

### Response:",IMPLEMENTATION.
732,/* * TODO: Exact ordering is only required for some tests; change the * comparison to do a set compare where necessary. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * TODO: Exact ordering is only required for some tests; change the * comparison to do a set compare where necessary. */

### Response:",TEST.
733,/* FIXME: We may be intern'ing more than once.*/,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* FIXME: We may be intern'ing more than once.*/

### Response:",DEFECT.
734,"// dump the trace and continue // this is currently only here for Android, which seems to have // bugs in its enumeration logic // ",DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// dump the trace and continue // this is currently only here for Android, which seems to have // bugs in its enumeration logic //

### Response:",DESIGN.
735,// TODO: UML2 - what do we do here?,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: UML2 - what do we do here?

### Response:",IMPLEMENTATION.
736,// a redraw should NOT trigger another change event,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// a redraw should NOT trigger another change event

### Response:",DESIGN.
737,// Jun 9 2004 12:40 PM // waitFor() hangs on some Java // implementations.,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Jun 9 2004 12:40 PM // waitFor() hangs on some Java // implementations.

### Response:",DEFECT.
738,// todo : temporary // needed because currently persister is the one that // creates and renders the join fragments for inheritence // hierarchies...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// todo : temporary // needed because currently persister is the one that // creates and renders the join fragments for inheritence // hierarchies...

### Response:",DESIGN.
739,// TODO: We can probably use this instead of all of the above // legacy UML 1.3 code - tfm - 20070915,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We can probably use this instead of all of the above // legacy UML 1.3 code - tfm - 20070915

### Response:",DESIGN.
740,//TODO: Should this be renamed to cLoc or something more appropriate than clock?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: Should this be renamed to cLoc or something more appropriate than clock?

### Response:",DESIGN.
741,/** * Get value from current scope or one of its captured scopes. * * FIXME: block variables are not getting primed to nil so we need to null check those * until we prime them properly. Also add assert back in. * * offset zero-indexed value that represents where variable lives * depth how many captured scopes down this variable should be set * the value here */,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Get value from current scope or one of its captured scopes. * * FIXME: block variables are not getting primed to nil so we need to null check those * until we prime them properly. Also add assert back in. * * offset zero-indexed value that represents where variable lives * depth how many captured scopes down this variable should be set * the value here */

### Response:",DEFECT.
742,"/* this should just bring back one table, i hope. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* this should just bring back one table, i hope. */

### Response:","DESIGN. I'm not sure if this is the best way to do it, but it works."
743,// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());

### Response:",DESIGN.
744,"// again, shouldn't happen. TODO: might want to throw exception instead.",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// again, shouldn't happen. TODO: might want to throw exception instead.

### Response:",DESIGN.
745,"// TODO ? if this class listen the model, it will be able to // change in live as it is done in the figs (diagram)",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO ? if this class listen the model, it will be able to // change in live as it is done in the figs (diagram)

### Response:",DESIGN.
746,// TODO: We need to rethrow this as some other exception // type but that is too much change for the moment.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: We need to rethrow this as some other exception // type but that is too much change for the moment.

### Response:",DESIGN.
747,/** * ToDoItems that the designer has explicitly indicated that (s)he considers * resolved. * <p> * TODO: generalize into a design rationale logging facility. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * ToDoItems that the designer has explicitly indicated that (s)he considers * resolved. * <p> * TODO: generalize into a design rationale logging facility. */

### Response:",DESIGN.
748,// SSS FIXME: Incomplete!,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// SSS FIXME: Incomplete!

### Response:",DESIGN.
749,/** * Register an attribute declaration for later retrieval. * Format: * - String type * - String default value * - int value type * *TODO: do something with attribute types. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Register an attribute declaration for later retrieval. * Format: * - String type * - String default value * - int value type * *TODO: do something with attribute types. */

### Response:",IMPLEMENTATION.
750,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
751,//TODO: create uk loaders for component properties,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: create uk loaders for component properties

### Response:",DESIGN.
752,"//TODO: arithmetic expressions, multiple new Foo(...)",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: arithmetic expressions, multiple new Foo(...)

### Response:",IMPLEMENTATION.
753,// TODO - why lower case? OK to use the default Locale?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO - why lower case? OK to use the default Locale?

### Response:",DESIGN.
754,// TODO needs to be synch? Probably not changed after threads have started // JMeter Home directory (excludes trailing separator) // JMeter bin directory (excludes trailing separator),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO needs to be synch? Probably not changed after threads have started // JMeter Home directory (excludes trailing separator) // JMeter bin directory (excludes trailing separator)

### Response:",DESIGN.
755,// FIXME: optimize for cases where we have no false branch,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: optimize for cases where we have no false branch

### Response:",DESIGN.
756,// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?

### Response:",DESIGN.
757,"/** * An object tagged as being the owner of a FigEdgeNote. Has knowledge * about the source and destination of the FigEdgeNote. <p> * * The source and destination are ModelElements. * At least one of them is a Comment - but they may be both Comments. * * TODO: There's tons of special case code scattered around ArgoUML for this * one class since it is the only ""owner"" of a FigEdgeModelElement which is not * a UML element. We should find a way to generalize this.<p> * * TODO: Issue 3031 requires this class to be replaced by * a similar mechanism as the n-ary association class: * the node and the edges shall all have the same owner, * i.e. the UML Comment object. * * Jul 17, 2004 * jaap.branderhorst */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * An object tagged as being the owner of a FigEdgeNote. Has knowledge * about the source and destination of the FigEdgeNote. <p> * * The source and destination are ModelElements. * At least one of them is a Comment - but they may be both Comments. * * TODO: There's tons of special case code scattered around ArgoUML for this * one class since it is the only ""owner"" of a FigEdgeModelElement which is not * a UML element. We should find a way to generalize this.<p> * * TODO: Issue 3031 requires this class to be replaced by * a similar mechanism as the n-ary association class: * the node and the edges shall all have the same owner, * i.e. the UML Comment object. * * Jul 17, 2004 * jaap.branderhorst */

### Response:",DESIGN.
758,// TODO: full-precision remainder is 1000x slower than MRI!,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: full-precision remainder is 1000x slower than MRI!

### Response:",DEFECT.
759,//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings

### Response:",DESIGN.
760,// TODO: WRONG - get interfaces from class,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: WRONG - get interfaces from class

### Response:",DEFECT.
761,// TODO: Rather than specifically ignore some item // maybe it would be better to specifically state // what items are of interest. Otherwise we may still // be acting on other events we don't need,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Rather than specifically ignore some item // maybe it would be better to specifically state // what items are of interest. Otherwise we may still // be acting on other events we don't need

### Response:",DESIGN.
762,// TODO: Need to add FileChooser ,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Need to add FileChooser

### Response:",IMPLEMENTATION.
763,"// TODO: BooleanExpresion is removed from UML2.x, is it OK to use // ValueSpecification?",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: BooleanExpresion is removed from UML2.x, is it OK to use // ValueSpecification?

### Response:",DESIGN. IMPLEMENTATION.
764,"//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//note that this method could easily be moved up to BasicEntityPersister, //if we ever needed to reuse it from other subclasses

### Response:",DESIGN.
765,// ignore; job was cancelled // FIXME: Is this ok?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// ignore; job was cancelled // FIXME: Is this ok?

### Response:",DESIGN.
766,// TODO: Bob says - we should not be listening here for // addition and removal of attributes. This should be done in // FigAttributesCompartment.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Bob says - we should not be listening here for // addition and removal of attributes. This should be done in // FigAttributesCompartment.

### Response:",DESIGN.
767,"/** * Command executes the search. * <p> * In case new result results arrive, it ensures that all interested * listeners are notified from inside the EDT. * <p> * FIXME: fdietz: No locking of folders currently implemented! TODO: fdietz: * create new Command for every provider to introduce real ""parallel"" search * * fdietz */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Command executes the search. * <p> * In case new result results arrive, it ensures that all interested * listeners are notified from inside the EDT. * <p> * FIXME: fdietz: No locking of folders currently implemented! TODO: fdietz: * create new Command for every provider to introduce real ""parallel"" search * * fdietz */

### Response:",IMPLEMENTATION.
768,"// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio

### Response:",DESIGN.
769,"/** * This form used from annotations (?). Essentially the same as the above using a * resultset-mapping reference, but without cacheMode, readOnly, and comment. * * FIXME: annotations do not use it, so it can be remove from my POV * * * * query The sql query string * resultSetRef The result-set-mapping name * querySpaces Any specified query spaces (used for auto-flushing) * cacheable Whether the query results are cacheable * cacheRegion If cacheable, the region into which to store the results * timeout A JDBC-level timeout to be applied * fetchSize A JDBC-level fetch-size to be applied * flushMode The flush mode to use for this query * parameterTypes parameter type map * callable Does the query string represent a callable object (i.e., proc) */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * This form used from annotations (?). Essentially the same as the above using a * resultset-mapping reference, but without cacheMode, readOnly, and comment. * * FIXME: annotations do not use it, so it can be remove from my POV * * * * query The sql query string * resultSetRef The result-set-mapping name * querySpaces Any specified query spaces (used for auto-flushing) * cacheable Whether the query results are cacheable * cacheRegion If cacheable, the region into which to store the results * timeout A JDBC-level timeout to be applied * fetchSize A JDBC-level fetch-size to be applied * flushMode The flush mode to use for this query * parameterTypes parameter type map * callable Does the query string represent a callable object (i.e., proc) */

### Response:",DESIGN.
770,// TODO ( fdietz): make i18n!,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO ( fdietz): make i18n!

### Response:",DESIGN.
771,/** * SAXException when things go wrong with SAX * IOException when there's an IO error * ParserConfigurationException when the parser finds wrong syntax * * TODO: Unused? */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * SAXException when things go wrong with SAX * IOException when there's an IO error * ParserConfigurationException when the parser finds wrong syntax * * TODO: Unused? */

### Response:",DESIGN.
772,/** * This sets up the editing domain for the model editor. * * TODO: We probably need an EditingDomain per Argo project so that we can * keep the ResourceSets separate. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * This sets up the editing domain for the model editor. * * TODO: We probably need an EditingDomain per Argo project so that we can * keep the ResourceSets separate. */

### Response:",DESIGN. Implementing this as a singleton is probably not the best * design.
773,// FIXME: Document difference between warn and warning (or rename one better),DOCUMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: Document difference between warn and warning (or rename one better)

### Response:",DOCUMENTATION.
774,// Programming error: bail out.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Programming error: bail out.

### Response:",DESIGN. Defensive programming.
775,// TODO: Make this more efficient for large I/Os,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Make this more efficient for large I/Os

### Response:",DESIGN. I/O is currently a blocking operation.
776,"// The property is an id's thing -- either a property // or a path. We need to make sure // that the object was created with the given id. // We don't have an adequate way of testing the actual // *value* of the Path object, though...",TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// The property is an id's thing -- either a property // or a path. We need to make sure // that the object was created with the given id. // We don't have an adequate way of testing the actual // *value* of the Path object, though...

### Response:",TEST.
777,// TODO fdietz: no paging used currently // show only first 5 results,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO fdietz: no paging used currently // show only first 5 results

### Response:",DESIGN.
778,//TODO: design new lifecycle for ProxyFactory,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: design new lifecycle for ProxyFactory

### Response:",DESIGN.
779,/* TODO should come up with a better name for the menu item */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO should come up with a better name for the menu item */

### Response:",DESIGN.
780,// TODO: This needs to be double checked. - tfm,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This needs to be double checked. - tfm

### Response:",IMPLEMENTATION.
781,// TODO: add and delete not currently supported // $NON-NLS-1$,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: add and delete not currently supported // $NON-NLS-1$

### Response:",IMPLEMENTATION.
782,/* TODO: Support navigability. * The code below causes and exception in FigAssociationEndAnnotation. */,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: Support navigability. * The code below causes and exception in FigAssociationEndAnnotation. */

### Response:",DEFECT.
783,// AHA! // this is probably the only way to fix this,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// AHA! // this is probably the only way to fix this

### Response:",DESIGN.
784,//DMS should we let this exception out?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//DMS should we let this exception out?

### Response:",DESIGN.
785,/* TODO: Indicate the direction! */,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: Indicate the direction! */

### Response:",IMPLEMENTATION.
786,// TODO: I18N required,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: I18N required

### Response:",IMPLEMENTATION.
787,// not needed,IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not needed

### Response:",IMPLEMENTATION.
788,/* Note: which of these things should be checked at parse time vs. run time? */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* Note: which of these things should be checked at parse time vs. run time? */

### Response:",DESIGN. I think the parser should check for invalid names at parse time.
789,/** * Custom TrustManager ignores all certificate errors * * TODO: implement conditional checking and logging * * (Derived from AuthSSLX509TrustManager in HttpClient contrib directory) */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Custom TrustManager ignores all certificate errors * * TODO: implement conditional checking and logging * * (Derived from AuthSSLX509TrustManager in HttpClient contrib directory) */

### Response:",DESIGN. Implement conditional checking and logging.
790,"// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic

### Response:",IMPLEMENTATION.
791,// XXX clean up this conditional,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// XXX clean up this conditional

### Response:",DESIGN. Clean up the conditional.
792,/** * Adds the entry to the mru list. * * filename * of the project * * TODO: This should listen for file save events rather than being called * directly - tfm. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Adds the entry to the mru list. * * filename * of the project * * TODO: This should listen for file save events rather than being called * directly - tfm. */

### Response:",DESIGN.
793,"/* * TODO: This transformation is Java specific. We need a more * language/notation scheme for specifying qualified names. * Possible algorithm - replace all punctuation with our * internal separator, replace multiple separators with a single * instance (for languages like C++). What about I18N? - tfm */",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* * TODO: This transformation is Java specific. We need a more * language/notation scheme for specifying qualified names. * Possible algorithm - replace all punctuation with our * internal separator, replace multiple separators with a single * instance (for languages like C++). What about I18N? - tfm */

### Response:",DESIGN. IMPLEMENTATION.
794,/** * Fix up bad figs. * <p> * Due to errors in earlier releases of argouml it can happen that there is * a generalization without a child or parent. * <p> * TODO: Move into XSL. We should not remove from the graph model while * we're writing to it or we have a possible cause of concurrent * modification exception. * * owner */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Fix up bad figs. * <p> * Due to errors in earlier releases of argouml it can happen that there is * a generalization without a child or parent. * <p> * TODO: Move into XSL. We should not remove from the graph model while * we're writing to it or we have a possible cause of concurrent * modification exception. * * owner */

### Response:",DESIGN.
795,// cleanAllExtentsBut(model); // TODO: why is this causing a crash?!?,TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// cleanAllExtentsBut(model); // TODO: why is this causing a crash?!?

### Response:",DEFECT.
796,"// if there are multiple variables in declaration, // separate this variable fragment into a separate declaration ",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// if there are multiple variables in declaration, // separate this variable fragment into a separate declaration

### Response:",DESIGN.
797,// TODO: don't require pop,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: don't require pop

### Response:",DEFECT.
798,"// ugly hack for cases like ""elements(foo.bar.collection)"" // (multi-part path expression ending in elements or indices)",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// ugly hack for cases like ""elements(foo.bar.collection)"" // (multi-part path expression ending in elements or indices)

### Response:",DESIGN.
799,// TODO Need to have a generic hibernate dialect extend this to provide the types.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO Need to have a generic hibernate dialect extend this to provide the types.

### Response:",DESIGN.
800,/** * TODO: Clean this mess up!!!! Load plugins. Load all plugin jars into class loader. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: Clean this mess up!!!! Load plugins. Load all plugin jars into class loader. */

### Response:",DESIGN. IMPLEMENTATION.
801,// TODO: Use Model.getModelManagementHelper().getPathList(modelElement); // TODO: This will fail with nested Models,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Use Model.getModelManagementHelper().getPathList(modelElement); // TODO: This will fail with nested Models

### Response:",DEFECT.
802,"// TODO: pipe handler to be reopened with path and ""w"" mode",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: pipe handler to be reopened with path and ""w"" mode

### Response:",IMPLEMENTATION.
803,"/** * TODO: minimum height should not be calculated every time, but only * when an FigMessage has been added or removed. * Currently doing that doesn't work because of an unknown problem. * How to test: create only two CRs and a create message between them. * Then move the create message to the bottom! * Until that is fixed the workaround is to call updateMinimumHeight() * every time the minimum size is needed */",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * TODO: minimum height should not be calculated every time, but only * when an FigMessage has been added or removed. * Currently doing that doesn't work because of an unknown problem. * How to test: create only two CRs and a create message between them. * Then move the create message to the bottom! * Until that is fixed the workaround is to call updateMinimumHeight() * every time the minimum size is needed */

### Response:",DESIGN.
804,// hack to skip processing,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// hack to skip processing

### Response:",DESIGN.
805,"// Don't wait on ourselves, we'll deadlock! // TODO: We might want to throw an exception here",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Don't wait on ourselves, we'll deadlock! // TODO: We might want to throw an exception here

### Response:",DESIGN.
806,"// TODO: Maybe prompt the user to ask to append the records, // ignoring errors for constraint violations?",IMPLEMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: Maybe prompt the user to ask to append the records, // ignoring errors for constraint violations?

### Response:",IMPLEMENTATION.
807,// TODO can this ever happen?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO can this ever happen?

### Response:",DESIGN.
808,// does it matter that this doesn't set the type correctly?,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// does it matter that this doesn't set the type correctly?

### Response:",DESIGN.
809,// not used,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// not used

### Response:",DESIGN.
810,// TODO: synchronized is required here as there can be some // concurrent modification problems when drawing a call message and // having that automatically draw the reply. Maybe fixing the TODO // below will resolve this and the synch can go.,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: synchronized is required here as there can be some // concurrent modification problems when drawing a call message and // having that automatically draw the reply. Maybe fixing the TODO // below will resolve this and the synch can go.

### Response:",DEFECT.
811,// TODO : complete this,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO : complete this

### Response:",DESIGN.
812,// TODO make these separate tests?,TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO make these separate tests?

### Response:",TEST.
813,// FIXME: it probably makes sense to allocate an array of 256 Colors // and lazily populate this array...,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: it probably makes sense to allocate an array of 256 Colors // and lazily populate this array...

### Response:",DESIGN.
814,"//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//before cascade! //TODO: should this be Session.instantiate(Persister, ...)?

### Response:",DESIGN.
815,// TODO: This won't work when the column has values with quotes in them. // Use PreparedStatements instead.,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This won't work when the column has values with quotes in them. // Use PreparedStatements instead.

### Response:",DEFECT.
816,// TODO: confirm expected args are IRubyObject (or similar),DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: confirm expected args are IRubyObject (or similar)

### Response:",DESIGN.
817,"/** * An array of valid connections, the combination of connecting class and * node classes must exist as a row in this list to be considered valid. * <ul> * <li>The 1st column is the connecting element. * <li>The 2nd column is the ""from"" element type. * <li>The 3rd column is the ""to"" element type. * The 3rd column is optional, if not given then it is assumed to be * the same as the ""from"" element. * <li>The existence of a 4th column indicates that the connection is valid * in one direction only. * </ul> * TODO: This encodes not only what is legal in UML, but also what ArgoUML * knows how to create, so not all legal connections are included. Probably * should be split into two pieces: 1) legal UML (here) and 2) supported (in * ArgoUML application someplace) - tfm - 20060325<p> * See also issue 3863.<p> * * Most of these are subtypes of Relationship which includes Association, * Dependency, Flow, Generalization, Extend, and Include. Dependency * includes Binding, Abstraction, Usage, and Permission. AssociationRole and * AssociationClass are Associations. The remaining items (Link, Transition, * AssociationEnd, Message) are non-Relationship types which ArgoUML treats * as connections/edges. */",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * An array of valid connections, the combination of connecting class and * node classes must exist as a row in this list to be considered valid. * <ul> * <li>The 1st column is the connecting element. * <li>The 2nd column is the ""from"" element type. * <li>The 3rd column is the ""to"" element type. * The 3rd column is optional, if not given then it is assumed to be * the same as the ""from"" element. * <li>The existence of a 4th column indicates that the connection is valid * in one direction only. * </ul> * TODO: This encodes not only what is legal in UML, but also what ArgoUML * knows how to create, so not all legal connections are included. Probably * should be split into two pieces: 1) legal UML (here) and 2) supported (in * ArgoUML application someplace) - tfm - 20060325<p> * See also issue 3863.<p> * * Most of these are subtypes of Relationship which includes Association, * Dependency, Flow, Generalization, Extend, and Include. Dependency * includes Binding, Abstraction, Usage, and Permission. AssociationRole and * AssociationClass are Associations. The remaining items (Link, Transition, * AssociationEnd, Message) are non-Relationship types which ArgoUML treats * as connections/edges. */

### Response:",DESIGN.
818,// and its stereotypes // TODO: Aren't stereotypes handled elsewhere?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// and its stereotypes // TODO: Aren't stereotypes handled elsewhere?

### Response:",DESIGN.
819,"// TODO : safe to interpret ""map.remove(key) == null"" as non-dirty?",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO : safe to interpret ""map.remove(key) == null"" as non-dirty?

### Response:",IMPLEMENTATION.
820,// This refactoring depends on the following API methods: // getCreateTableSQL,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// This refactoring depends on the following API methods: // getCreateTableSQL

### Response:",DESIGN.
821,/* workaround for A+keys producing * garbage on Windows */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* workaround for A+keys producing * garbage on Windows */

### Response:",DESIGN.
822,// TODO: This is a temporary crutch to use until all Figs are updated // to use the constructor that accepts a DiagramSettings object,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO: This is a temporary crutch to use until all Figs are updated // to use the constructor that accepts a DiagramSettings object

### Response:",DESIGN.
823,// todo : what else to do here?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// todo : what else to do here?

### Response:",DESIGN.
824,"//TODO: this profile isn't used anymore, see getModel()",DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
//TODO: this profile isn't used anymore, see getModel()

### Response:",DESIGN.
825,// TODO fetch list of languages from a file? // N.B. Changes to language list need to be reflected in // resources/PackageTest.java,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO fetch list of languages from a file? // N.B. Changes to language list need to be reflected in // resources/PackageTest.java

### Response:",DESIGN.
826,"/** * Well-formedness rule for Package. Check that the alias for an imported * element doesn't conflict with any existing name. Section 4.14.3.3 of UML 1.4 * spec. * <p> * Other types of name conflicts in a Namespace are checked by * { CrNameConflict}. * <p> * TODO: MVW: If an Alias is the same as another class' name, then this critic * fires, but the explanation and wizard are wrong! */",DOCUMENTATION,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Well-formedness rule for Package. Check that the alias for an imported * element doesn't conflict with any existing name. Section 4.14.3.3 of UML 1.4 * spec. * <p> * Other types of name conflicts in a Namespace are checked by * { CrNameConflict}. * <p> * TODO: MVW: If an Alias is the same as another class' name, then this critic * fires, but the explanation and wizard are wrong! */

### Response:",DEFECT.
827,// Change the parent (which was the class static) to the class instance // We really need to check if we're a static inner class here first... // but for some reason Java won't show the static modifier on our // fake inner classes... could generate a flag field.,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// Change the parent (which was the class static) to the class instance // We really need to check if we're a static inner class here first... // but for some reason Java won't show the static modifier on our // fake inner classes... could generate a flag field.

### Response:",DESIGN.
828,// TODO - should this be a failure?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO - should this be a failure?

### Response:",DESIGN.
829,// TODO needs cleaning up,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// TODO needs cleaning up

### Response:",DESIGN. Clean up after ourselves.
830,// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface

### Response:",DESIGN.
831,// FIXME: for some reason this dispatcher causes a VerifyError... //classClass.dispatcher = callbackFactory.createDispatcher(classClass);,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// FIXME: for some reason this dispatcher causes a VerifyError... //classClass.dispatcher = callbackFactory.createDispatcher(classClass);

### Response:",DEFECT.
832,/* TODO: Why does it fail for changing * the name of an associationend? * Why should it pass? */,TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* TODO: Why does it fail for changing * the name of an associationend? * Why should it pass? */

### Response:",TEST.
833,/** * Create an empty but initialized instance of a UML Binding. * * an initialized UML Binding instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * Create an empty but initialized instance of a UML Binding. * * an initialized UML Binding instance. * TODO: This needs an extra parameter to specify the model/extent where * the new element should be created. */

### Response:",DESIGN. It doesn't make sense to create a new element without knowing where to * place it.
834,/** * FIXME: * * fdietz: No locking of folders currently implemented! * * frd */,DEFECT,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/** * FIXME: * * fdietz: No locking of folders currently implemented! * * frd */

### Response:",IMPLEMENTATION.
835,// do we need to update the crosshair values?,DESIGN,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
// do we need to update the crosshair values?

### Response:",DESIGN.
836,/* Testing: Does not fire. Conflict with CrNameConflict. */,TEST,"### Instruction: Classify the following text as DEFECT, DESIGN, DOCUMENTATION,  IMPLEMENTATION, or TEST. Use just one class.

### Input:
/* Testing: Does not fire. Conflict with CrNameConflict. */

### Response:",TEST.
